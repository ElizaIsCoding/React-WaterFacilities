{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\n\n// import React, {Component} from 'react';\n// import { connect } from 'react-redux';\n// import { firestoreConnect } from 'react-redux-firebase';\n// import { compose } from 'redux';\n// //import { Redirect } from 'react-router-dom';\n// class Uploaded extends Component {\n//     render() {\n//         const {id, uploaded, url} = this.props;\n//         console.log(this.props);\n//         //if(!auth.uid) return <Redirect to='/signin' /> \n//         return (\n//             <>\n//                 <ul>\n//                    <li key={id}>\n//                      <h3>{uploaded}</h3>\n//                      <p>{url}</p>  \n//                    </li> \n//                 </ul>\n//         </>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);\nimport React from 'react';\n\nvar Uploaded = function Uploaded(props) {\n  var _this$props = _this.props,\n      project = _this$props.project,\n      id = _this$props.id,\n      uploaded = _this$props.uploaded,\n      url = _this$props.url;\n  console.log(project);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, uploaded), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, url))));\n};\n\nexport default Uploaded;","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","Uploaded","props","project","id","uploaded","url","console","log"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,oBACa,KAAI,CAACA,KADlB;AAAA,MACjBC,OADiB,eACjBA,OADiB;AAAA,MACRC,EADQ,eACRA,EADQ;AAAA,MACJC,QADI,eACJA,QADI;AAAA,MACMC,GADN,eACMA,GADN;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,GAAG,EAAEC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,QAAL,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,GAAJ,CAFJ,CADJ,CADJ,CADJ;AAaH,CAhBD;;AAkBA,eAAeL,QAAf","sourcesContent":["// import React, {Component} from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { firestoreConnect } from 'react-redux-firebase';\r\n// import { compose } from 'redux';\r\n// //import { Redirect } from 'react-router-dom';\r\n\r\n// class Uploaded extends Component {\r\n//     render() {\r\n\r\n//         const {id, uploaded, url} = this.props;\r\n//         console.log(this.props);\r\n//         //if(!auth.uid) return <Redirect to='/signin' /> \r\n//         return (\r\n//             <>\r\n//                 <ul>\r\n//                    <li key={id}>\r\n//                      <h3>{uploaded}</h3>\r\n//                      <p>{url}</p>  \r\n//                    </li> \r\n//                 </ul>\r\n//         </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n\r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\nimport React from 'react';\r\n\r\n\r\n\r\nconst Uploaded = (props) => {\r\n    const {project, id, uploaded, url} = this.props;\r\n    console.log(project)\r\n    return (\r\n        <>\r\n            <ul>\r\n                <li key={id}>\r\n                    <h3>{uploaded}</h3>\r\n                    <p>{url}</p>\r\n                </li>\r\n            </ul>       \r\n        </>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Uploaded;\r\n\r\n"]},"metadata":{},"sourceType":"module"}