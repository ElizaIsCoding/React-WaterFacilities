{"ast":null,"code":"\"use strict\"; // The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pruneNulls = exports.applyChange = void 0;\n/** @hidden */\n\nvar _ = require(\"lodash\");\n\nfunction applyChange(src, dest) {\n  // if not mergeable, don't merge\n  if (!_.isPlainObject(dest) || !_.isPlainObject(src)) {\n    return dest;\n  }\n\n  return pruneNulls(_.merge({}, src, dest));\n}\n\nexports.applyChange = applyChange;\n\nfunction pruneNulls(obj) {\n  for (var key in obj) {\n    if (obj[key] === null) {\n      delete obj[key];\n    } else if (_.isPlainObject(obj[key])) {\n      pruneNulls(obj[key]);\n    }\n  }\n\n  return obj;\n}\n\nexports.pruneNulls = pruneNulls;","map":null,"metadata":{},"sourceType":"script"}