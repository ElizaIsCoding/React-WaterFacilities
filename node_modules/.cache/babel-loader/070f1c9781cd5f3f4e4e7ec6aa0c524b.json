{"ast":null,"code":"export const createProject = project => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    console.log(firestore);\n    firestore.collection('projects').add({ ...project,\n      authorFirstName: 'Elena',\n      authorLastName: 'Gurjeva',\n      authorId: 12345,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/store/actions/projectActions.js"],"names":["createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","console","log","collection","add","authorFirstName","authorLastName","authorId","createdAt","Date","then","type","catch","err"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,OAAD,IAAa;AACtC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAArB,KAAqD;AACxD,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAA,IAAAA,SAAS,CAACG,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,CAAqC,EACjC,GAAGT,OAD8B;AAEjCU,MAAAA,eAAe,EAAE,OAFgB;AAGjCC,MAAAA,cAAc,EAAE,SAHiB;AAIjCC,MAAAA,QAAQ,EAAE,KAJuB;AAKjCC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AALsB,KAArC,EAMGC,IANH,CAMQ,MAAM;AACVd,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAE,gBAAR;AAA0BhB,QAAAA;AAA1B,OAAD,CAAR;AACH,KARD,EAQGiB,KARH,CAQSC,GAAG,IAAI;AACZjB,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA;AAAhC,OAAD,CAAR;AACH,KAVD;AAaH,GAhBD;AAiBH,CAlBM","sourcesContent":["export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        console.log(firestore)\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: 'Elena',\r\n            authorLastName: 'Gurjeva',\r\n            authorId: 12345,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch(err => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err})\r\n        });\r\n        \r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}