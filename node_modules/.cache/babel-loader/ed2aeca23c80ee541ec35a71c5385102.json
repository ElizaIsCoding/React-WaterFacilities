{"ast":null,"code":"\"use strict\"; // The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setup = void 0;\n/** @hidden */\n\nvar config_1 = require(\"./config\");\n\nvar logger_1 = require(\"./logger\"); // Set up for config and vars\n\n\nfunction setup() {\n  // TEMPORARY WORKAROUND (BUG 63586213):\n  // Until the Cloud Functions builder can publish FIREBASE_CONFIG, automatically provide it on import based on what\n  // we can deduce.\n  if (!process.env.FIREBASE_CONFIG) {\n    var cfg = config_1.firebaseConfig();\n\n    if (cfg) {\n      process.env.FIREBASE_CONFIG = JSON.stringify(cfg);\n    }\n  } // WORKAROUND (BUG 134416569): GCLOUD_PROJECT missing in Node 10\n\n\n  if (!process.env.GCLOUD_PROJECT && process.env.FIREBASE_CONFIG) {\n    process.env.GCLOUD_PROJECT = JSON.parse(process.env.FIREBASE_CONFIG).projectId;\n  } // If FIREBASE_CONFIG is still not found, try using GCLOUD_PROJECT to estimate\n\n\n  if (!process.env.FIREBASE_CONFIG) {\n    if (process.env.GCLOUD_PROJECT) {\n      logger_1.warn('Warning, estimating Firebase Config based on GCLOUD_PROJECT. Initializing firebase-admin may fail');\n      process.env.FIREBASE_CONFIG = JSON.stringify({\n        databaseURL: process.env.DATABASE_URL || \"https://\".concat(process.env.GCLOUD_PROJECT, \".firebaseio.com\"),\n        storageBucket: process.env.STORAGE_BUCKET_URL || \"\".concat(process.env.GCLOUD_PROJECT, \".appspot.com\"),\n        projectId: process.env.GCLOUD_PROJECT\n      });\n    } else {\n      logger_1.warn('Warning, FIREBASE_CONFIG and GCLOUD_PROJECT environment variables are missing. Initializing firebase-admin will fail');\n    }\n  }\n}\n\nexports.setup = setup;","map":null,"metadata":{},"sourceType":"script"}