{"ast":null,"code":"export const createProject = project => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firestore = getFirebase().firestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.profile.uid; //const authorId = getState().firebase.auth.uid\n\n    firestore.collection('projects').add({ ...project,\n      authorFirstName: state.firebase.firstName,\n      authorLastName: 'Gurjeva',\n      authorId: 12345,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err\n      });\n    });\n  };\n}; // we are passing this.state to this project action. Inside here we are\n// returning a function. We used thunk to do this and we get access to a \n//dispatch and store enhancers. Here we are pausing dispatch while we are\n// asyncroniusly adding a document to firebase.","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/store/actions/projectActions.js"],"names":["createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","authorId","uid","collection","add","authorFirstName","state","firstName","authorLastName","createdAt","Date","then","type","catch","err"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,OAAD,IAAa;AACtC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAArB,KAAqD;AACxD,UAAMC,SAAS,GAAGF,WAAW,GAAGE,SAAd,EAAlB;AACA,UAAMC,OAAO,GAAGJ,QAAQ,GAAGK,QAAX,CAAoBD,OAApC;AACA,UAAME,QAAQ,GAAGN,QAAQ,GAAGK,QAAX,CAAoBD,OAApB,CAA4BG,GAA7C,CAHwD,CAIxD;;AACAJ,IAAAA,SAAS,CAACK,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,CAAqC,EACjC,GAAGX,OAD8B;AAEjCY,MAAAA,eAAe,EAAEC,KAAK,CAACN,QAAN,CAAeO,SAFC;AAGjCC,MAAAA,cAAc,EAAE,SAHiB;AAIjCP,MAAAA,QAAQ,EAAE,KAJuB;AAKjCQ,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AALsB,KAArC,EAMGC,IANH,CAMQ,MAAM;AACVjB,MAAAA,QAAQ,CAAC;AAAEkB,QAAAA,IAAI,EAAE,gBAAR;AAA0BnB,QAAAA;AAA1B,OAAD,CAAR;AACH,KARD,EAQGoB,KARH,CAQSC,GAAG,IAAI;AACZpB,MAAAA,QAAQ,CAAC;AAAEkB,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA;AAAhC,OAAD,CAAR;AACH,KAVD;AAaH,GAlBD;AAmBH,CApBM,C,CAoBN;AACD;AACA;AACA","sourcesContent":["export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirebase().firestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.profile.uid;\r\n        //const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: state.firebase.firstName,\r\n            authorLastName: 'Gurjeva',\r\n            authorId: 12345,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch(err => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err})\r\n        });\r\n        \r\n        \r\n    }\r\n}// we are passing this.state to this project action. Inside here we are\r\n// returning a function. We used thunk to do this and we get access to a \r\n//dispatch and store enhancers. Here we are pausing dispatch while we are\r\n// asyncroniusly adding a document to firebase.\r\n\r\n"]},"metadata":{},"sourceType":"module"}