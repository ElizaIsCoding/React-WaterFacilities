{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom'; //import { getFirestore } from 'redux-firestore';\n//import { Redirect } from 'react-router-dom';\n\nvar Uploaded = /*#__PURE__*/function (_Component) {\n  _inherits(Uploaded, _Component);\n\n  function Uploaded() {\n    _classCallCheck(this, Uploaded);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Uploaded).apply(this, arguments));\n  }\n\n  _createClass(Uploaded, [{\n    key: \"render\",\n    value: function render() {\n      var projects = this.props.projects;\n      console.log(this.props); //if(!auth.uid) return <Redirect to='/signin' /> \n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 22\n        }\n      }, projects.relatedFile), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 22\n        }\n      }, projects.url)));\n    }\n  }]);\n\n  return Uploaded;\n}(Component); // const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n\n\nexport default compose( //compose connected several HOCs, just\n//like store enhancers in Index.js\nconnect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]) //triggers firestoreReducer to sync changes with firebase. takes in an \n//array as a parameter. passing an object of Project collection\n)(Uploaded); //import React from 'react';\n// const Uploaded = (props) => {\n//     const {projects, project} = props;\n//     console.log('project', project) \n//   return (\n//         <div className=\"project-list section\">\n//         {/* <Link to={'/uploaded/' + project.id}  key={project.id}> */}\n//           <img alt='relatedFile' src={project.url} height='100' width='100'></img>\n//           {/* </Link> */}\n//         </div>\n//   )\n// };\n//Uploaded();\n// const mapStateToProps = (state, props) => {\n//     const projects = state.firestore.ordered.projects;\n//     const project = props.project;\n//     console.log('state', state)\n//     //console.log('project', project)\n//     return {\n//         projects: projects,\n//         auth: state.firebase.auth,\n//         //project: project,\n//     }//this object is what we would like to attach to our props\n// }\n//     export default compose(//compose connected several HOCs, just\n//         //like store enhancers in Index.js\n//         connect(mapStateToProps),\n//         firestoreConnect([\n//             { collection: 'projects' },\n//         ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//         //array as a parameter. passing an object of Project collection\n//     )(Uploaded);\n//export default Uploaded;","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","Component","connect","firestoreConnect","compose","Link","Uploaded","projects","props","console","log","relatedFile","url","mapStateToProps","collection"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACC,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACD,SAAQC,IAAR,QAAmB,kBAAnB,C,CACA;AACA;;IAEMC,Q;;;;;;;;;;;6BACO;AAAA,UACGC,QADH,GACgB,KAAKC,KADrB,CACGD,QADH;AAELE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB,EAFK,CAGL;;AACA,0BACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,QAAQ,CAACI,WAAd,CADL,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,QAAQ,CAACK,GAAb,CAFL,CADJ,CADJ;AAQH;;;;EAbkBX,S,GAgBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeG,OAAO,EAAC;AACnB;AACAF,OAAO,CAACW,eAAD,CAFW,EAGlBV,gBAAgB,CAAC,CACb;AAAEW,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAHE,CAMhB;AACF;AAPkB,CAAP,CAQbR,QARa,CAAf,C,CAUA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGC","sourcesContent":["import React, {Component} from 'react';\r\n import { connect } from 'react-redux';\r\n import { firestoreConnect } from 'react-redux-firebase';\r\n import { compose } from 'redux';\r\nimport {Link} from 'react-router-dom';\r\n//import { getFirestore } from 'redux-firestore';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\nclass Uploaded extends Component {\r\n    render() {\r\n        const  {projects}  = this.props;\r\n        console.log(this.props);\r\n        //if(!auth.uid) return <Redirect to='/signin' /> \r\n        return (\r\n            <>\r\n                <div>\r\n                     <h3>{projects.relatedFile}</h3>\r\n                     <p>{projects.url}</p>  \r\n                </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\nexport default compose(//compose connected several HOCs, just\r\n    //like store enhancers in Index.js\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' },\r\n\r\n    ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n    //array as a parameter. passing an object of Project collection\r\n)(Uploaded);\r\n\r\n//import React from 'react';\r\n\r\n\r\n\r\n\r\n// const Uploaded = (props) => {\r\n  \r\n//     const {projects, project} = props;\r\n\r\n//     console.log('project', project) \r\n//   return (\r\n//         <div className=\"project-list section\">\r\n//         {/* <Link to={'/uploaded/' + project.id}  key={project.id}> */}\r\n//           <img alt='relatedFile' src={project.url} height='100' width='100'></img>\r\n//           {/* </Link> */}\r\n//         </div>\r\n//   )\r\n  \r\n// };\r\n\r\n\r\n\r\n\r\n//Uploaded();\r\n\r\n// const mapStateToProps = (state, props) => {\r\n//     const projects = state.firestore.ordered.projects;\r\n//     const project = props.project;\r\n//     console.log('state', state)\r\n//     //console.log('project', project)\r\n//     return {\r\n//         projects: projects,\r\n//         auth: state.firebase.auth,\r\n//         //project: project,\r\n//     }//this object is what we would like to attach to our props\r\n// }\r\n    \r\n//     export default compose(//compose connected several HOCs, just\r\n//         //like store enhancers in Index.js\r\n//         connect(mapStateToProps),\r\n//         firestoreConnect([\r\n//             { collection: 'projects' },\r\n    \r\n//         ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//         //array as a parameter. passing an object of Project collection\r\n//     )(Uploaded);\r\n\r\n\r\n //export default Uploaded;\r\n"]},"metadata":{},"sourceType":"module"}