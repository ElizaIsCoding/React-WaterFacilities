{"ast":null,"code":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'; //import { Redirect } from 'react-router-dom';\n// class Uploaded extends Component {\n//     render() {\n//         const  {projects}  = this.props;\n//         console.log(projects);\n//         //if(!auth.uid) return <Redirect to='/signin' /> \n//         return (\n//             <>\n//                 <div>\n//                      {/* <h3>{projects.relatedFile}</h3>\n//                      <p>{projects.url}</p>   */}\n//                 </div>\n//         </>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);\n//import React from 'react';\n// const Uploaded = (props) => {\n//     const {project, id, uploaded, url} = this.props;\n//     console.log(props)\n//     return (\n//         <>\n//             <ul>\n//                 <li key={id}>\n//                     <h3>{uploaded}</h3>\n//                     <p>{url}</p>\n//                 </li>\n//             </ul>       \n//         </>\n//     )\n// }\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    // state is passed form rootReducer,\n    //project is a property of the state in rootReducer\n    //projects is a property of the project object in\n    // projectReducer, initState\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose( //compose connected several HOCs, just\n//like store enhancers in Index.js\nconnect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]) //triggers firestoreReducer to sync changes with firebase. takes in an \n//array as a parameter. passing an object of Project collection\n)(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","Component","connect","firestoreConnect","compose","mapStateToProps","state","console","log","projects","firestore","ordered","auth","firebase","collection","Uploaded"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACC,SAAO;AACHG,IAAAA,QAAQ,EAAEH,KAAK,CAACI,SAAN,CAAgBC,OAAhB,CAAwBF,QAD/B;AACwC;AAC3C;AACA;AACA;AACAG,IAAAA,IAAI,EAAEN,KAAK,CAACO,QAAN,CAAeD;AALlB,GAAP;AAOH,CATL;;AAWI,eAAeR,OAAO,EAAC;AACnB;AACAF,OAAO,CAACG,eAAD,CAFW,EAGlBF,gBAAgB,CAAC,CACb;AAAEW,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAHE,CAMhB;AACF;AAPkB,CAAP,CAQbC,QARa,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n// class Uploaded extends Component {\r\n//     render() {\r\n//         const  {projects}  = this.props;\r\n//         console.log(projects);\r\n//         //if(!auth.uid) return <Redirect to='/signin' /> \r\n//         return (\r\n//             <>\r\n//                 <div>\r\n//                      {/* <h3>{projects.relatedFile}</h3>\r\n//                      <p>{projects.url}</p>   */}\r\n//                 </div>\r\n//         </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n\r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\n//import React from 'react';\r\n\r\n\r\n\r\n// const Uploaded = (props) => {\r\n//     const {project, id, uploaded, url} = this.props;\r\n//     console.log(props)\r\n//     return (\r\n//         <>\r\n//             <ul>\r\n//                 <li key={id}>\r\n//                     <h3>{uploaded}</h3>\r\n//                     <p>{url}</p>\r\n//                 </li>\r\n//             </ul>       \r\n//         </>\r\n\r\n//     )\r\n\r\n\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n       console.log(state);\r\n        return {\r\n            projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n            //project is a property of the state in rootReducer\r\n            //projects is a property of the project object in\r\n            // projectReducer, initState\r\n            auth: state.firebase.auth,\r\n        };\r\n    };\r\n    \r\n    export default compose(//compose connected several HOCs, just\r\n        //like store enhancers in Index.js\r\n        connect(mapStateToProps),\r\n        firestoreConnect([\r\n            { collection: 'projects' },\r\n    \r\n        ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n        //array as a parameter. passing an object of Project collection\r\n    )(Uploaded);\r\n\r\n"]},"metadata":{},"sourceType":"module"}