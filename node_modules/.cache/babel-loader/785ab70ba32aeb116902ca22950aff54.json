{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Timer.js\";\n\n// import React, { Component } from 'react';\n// class Timer extends Component {\n//     constructor() {\n//       super();\n//       this.state = {\n//         time: {\n//           hours: 0,\n//           minutes: 0,\n//           seconds: 0,\n//           milliseconds: 0,\n//         },\n//         duration: 4 * 60 * 60 * 1000,\n//         timer: null\n//       };\n//       this.startTimer = this.start.bind(this);\n//     }\n//     msToTime(duration) {\n//       let milliseconds = parseInt((duration % 1000));\n//       let seconds = Math.floor((duration / 1000) % 60);\n//       let minutes = Math.floor((duration / (1000 * 60)) % 60);\n//       let hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n//       hours = hours.toString().padStart(2, '0');\n//       minutes = minutes.toString().padStart(2, '0');\n//       seconds = seconds.toString().padStart(2, '0');\n//       milliseconds = milliseconds.toString().padStart(3, '0');\n//       return {\n//         hours,\n//         minutes,\n//         seconds,\n//         milliseconds\n//       };\n//     }\n//     componentDidMount() {}\n//     start() {\n//       if (!this.state.timer) {\n//         this.state.startTime = Date.now();\n//         this.timer = window.setInterval(() => this.run(), 10);\n//       }\n//     }\n//     run() {\n//       const diff = Date.now() - this.state.startTime;\n//       // If you want to count up\n//       // this.setState(() => ({\n//       //  time: this.msToTime(diff)\n//       // }));\n//       // count down\n//       let remaining = this.state.duration - diff;\n//       if (remaining < 0) {\n//         remaining = 0;\n//       }\n//       this.setState(() => ({\n//         time: this.msToTime(remaining)\n//       }));\n//       if (remaining === 0) {\n//         window.clearTimeout(this.timer);\n//         this.timer = null;\n//       }\n//     }\n//     render() {\n//       return (\n//         <div>\n//         <button onClick = {this.startTimer}> Start </button> {this.state.time.hours}: {\n//           this.state.time.minutes\n//         }: {\n//           this.state.time.seconds\n//         }. {\n//           this.state.time.milliseconds\n//         }:\n//         </div>\n//       );\n//     }\n//   }\n// export default Timer;\nimport React from 'react'; // Renderer callback with condition\n\nvar Renderer = function Renderer(_ref) {\n  var hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds,\n      completed = _ref.completed;\n  var Timer = /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"case time is finished\");\n\n  if (completed) {\n    // Render a completed state\n    return /*#__PURE__*/React.createElement(Timer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 12\n      }\n    });\n  } else {\n    // Render a countdown\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }\n    }, hours, \":\", minutes, \":\", seconds);\n  }\n};\n\nexport default Renderer;","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Timer.js"],"names":["React","Renderer","hours","minutes","seconds","completed","Timer"],"mappings":";;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAMA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA4C;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC3D,MAAMC,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAd;;AACA,MAAID,SAAJ,EAAe;AACb;AACA,wBAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHD,MAGO;AACL;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOH,KAAP,OAAeC,OAAf,OAAyBC,OAAzB,CAAP;AACD;AACF,CATD;;AAUA,eAAeH,QAAf","sourcesContent":["// import React, { Component } from 'react';\r\n\r\n\r\n// class Timer extends Component {\r\n//     constructor() {\r\n//       super();\r\n//       this.state = {\r\n//         time: {\r\n//           hours: 0,\r\n//           minutes: 0,\r\n//           seconds: 0,\r\n//           milliseconds: 0,\r\n//         },\r\n//         duration: 4 * 60 * 60 * 1000,\r\n//         timer: null\r\n//       };\r\n//       this.startTimer = this.start.bind(this);\r\n//     }\r\n  \r\n//     msToTime(duration) {\r\n//       let milliseconds = parseInt((duration % 1000));\r\n//       let seconds = Math.floor((duration / 1000) % 60);\r\n//       let minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n//       let hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n  \r\n//       hours = hours.toString().padStart(2, '0');\r\n//       minutes = minutes.toString().padStart(2, '0');\r\n//       seconds = seconds.toString().padStart(2, '0');\r\n//       milliseconds = milliseconds.toString().padStart(3, '0');\r\n  \r\n//       return {\r\n//         hours,\r\n//         minutes,\r\n//         seconds,\r\n//         milliseconds\r\n//       };\r\n//     }\r\n  \r\n//     componentDidMount() {}\r\n  \r\n//     start() {\r\n//       if (!this.state.timer) {\r\n//         this.state.startTime = Date.now();\r\n//         this.timer = window.setInterval(() => this.run(), 10);\r\n//       }\r\n//     }\r\n  \r\n//     run() {\r\n//       const diff = Date.now() - this.state.startTime;\r\n      \r\n//       // If you want to count up\r\n//       // this.setState(() => ({\r\n//       //  time: this.msToTime(diff)\r\n//       // }));\r\n      \r\n//       // count down\r\n//       let remaining = this.state.duration - diff;\r\n//       if (remaining < 0) {\r\n//         remaining = 0;\r\n//       }\r\n//       this.setState(() => ({\r\n//         time: this.msToTime(remaining)\r\n//       }));\r\n//       if (remaining === 0) {\r\n//         window.clearTimeout(this.timer);\r\n//         this.timer = null;\r\n//       }\r\n//     }\r\n  \r\n//     render() {\r\n//       return (\r\n//         <div>\r\n//         <button onClick = {this.startTimer}> Start </button> {this.state.time.hours}: {\r\n//           this.state.time.minutes\r\n//         }: {\r\n//           this.state.time.seconds\r\n//         }. {\r\n//           this.state.time.milliseconds\r\n//         }:\r\n//         </div>\r\n//       );\r\n//     }\r\n//   }\r\n\r\n// export default Timer;\r\nimport React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n// Renderer callback with condition\r\nconst Renderer = ({ hours, minutes, seconds, completed }) => {\r\n  const Timer = <span>case time is finished</span>;\r\n  if (completed) {\r\n    // Render a completed state\r\n    return <Timer />;\r\n  } else {\r\n    // Render a countdown\r\n    return <span>{hours}:{minutes}:{seconds}</span>;\r\n  }\r\n};\r\nexport default Renderer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}