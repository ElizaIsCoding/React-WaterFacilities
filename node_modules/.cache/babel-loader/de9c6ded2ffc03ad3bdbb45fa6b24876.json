{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom'; //import { getFirestore } from 'redux-firestore';\n//import { Redirect } from 'react-router-dom';\n// class Uploaded extends Component {\n//     render() {\n//         const  {projects}  = this.props;\n//         console.log(projects);\n//         //if(!auth.uid) return <Redirect to='/signin' /> \n//         return (\n//             <>\n//                 <div>\n//                      {/* <h3>{projects.relatedFile}</h3>\n//                      <p>{projects.url}</p>   */}\n//                 </div>\n//         </>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);\n//import React from 'react';\n\nvar Uploaded = function Uploaded(props, ownProps) {\n  var projects = props.projects,\n      project = props.project;\n  var projectData = {\n    project: project\n  };\n  console.log(projectData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-list section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: '/uploaded/' + projectData.id,\n    key: projectData.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"relatedFile\",\n    src: projectData.url,\n    height: \"100\",\n    width: \"100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })));\n}; //Uploaded();\n\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var projects = state.firestore.ordered.projects;\n  var project = props.project;\n  console.log('props', props); //console.log('project', project)\n\n  return {\n    projects: projects,\n    auth: state.firebase.auth //project: project,\n\n  }; //this object is what we would like to attach to our props\n};\n\nexport default compose( //compose connected several HOCs, just\n//like store enhancers in Index.js\nconnect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]) //triggers firestoreReducer to sync changes with firebase. takes in an \n//array as a parameter. passing an object of Project collection\n)(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","connect","firestoreConnect","compose","Link","Uploaded","props","ownProps","projects","project","projectData","console","log","id","url","mapStateToProps","state","firestore","ordered","auth","firebase","collection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAAA,MAE3BC,QAF2B,GAENF,KAFM,CAE3BE,QAF2B;AAAA,MAEjBC,OAFiB,GAENH,KAFM,CAEjBG,OAFiB;AAGlC,MAAMC,WAAW,GAAG;AAACD,IAAAA,OAAO,EAAPA;AAAD,GAApB;AACCE,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACH,sBACM;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,eAAeA,WAAW,CAACG,EAArC;AAA0C,IAAA,GAAG,EAAEH,WAAW,CAACG,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAC,aAAT;AAAuB,IAAA,GAAG,EAAEH,WAAW,CAACI,GAAxC;AAA6C,IAAA,MAAM,EAAC,KAApD;AAA0D,IAAA,KAAK,EAAC,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,CADN;AAQD,CAbD,C,CAkBA;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQV,KAAR,EAAkB;AACtC,MAAME,QAAQ,GAAGQ,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBV,QAAzC;AACA,MAAMC,OAAO,GAAGH,KAAK,CAACG,OAAtB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB,EAHsC,CAItC;;AACA,SAAO;AACHE,IAAAA,QAAQ,EAAEA,QADP;AAEHW,IAAAA,IAAI,EAAEH,KAAK,CAACI,QAAN,CAAeD,IAFlB,CAGH;;AAHG,GAAP,CALsC,CASrC;AACJ,CAVD;;AAYI,eAAehB,OAAO,EAAC;AACnB;AACAF,OAAO,CAACc,eAAD,CAFW,EAGlBb,gBAAgB,CAAC,CACb;AAAEmB,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAHE,CAMhB;AACF;AAPkB,CAAP,CAQbhB,QARa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport {Link} from 'react-router-dom';\r\n//import { getFirestore } from 'redux-firestore';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n// class Uploaded extends Component {\r\n//     render() {\r\n//         const  {projects}  = this.props;\r\n//         console.log(projects);\r\n//         //if(!auth.uid) return <Redirect to='/signin' /> \r\n//         return (\r\n//             <>\r\n//                 <div>\r\n//                      {/* <h3>{projects.relatedFile}</h3>\r\n//                      <p>{projects.url}</p>   */}\r\n//                 </div>\r\n//         </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n\r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\n//import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Uploaded = (props, ownProps) => {\r\n  \r\n    const {projects, project} = props;\r\n    const projectData = {project};\r\n     console.log(projectData) \r\n  return (\r\n        <div className=\"project-list section\">\r\n        <Link to={'/uploaded/' + projectData.id}  key={projectData.id}>\r\n          <img alt='relatedFile' src={projectData.url} height='100' width='100'></img>\r\n          </Link>\r\n        </div>\r\n  )\r\n\r\n};\r\n\r\n\r\n\r\n\r\n//Uploaded();\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    const projects = state.firestore.ordered.projects;\r\n    const project = props.project;\r\n    console.log('props', props)\r\n    //console.log('project', project)\r\n    return {\r\n        projects: projects,\r\n        auth: state.firebase.auth,\r\n        //project: project,\r\n    }//this object is what we would like to attach to our props\r\n}\r\n    \r\n    export default compose(//compose connected several HOCs, just\r\n        //like store enhancers in Index.js\r\n        connect(mapStateToProps),\r\n        firestoreConnect([\r\n            { collection: 'projects' },\r\n    \r\n        ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n        //array as a parameter. passing an object of Project collection\r\n    )(Uploaded);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}