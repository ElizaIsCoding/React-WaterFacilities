{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nvar Uploaded = function Uploaded(props) {\n  var project = props.project,\n      auth = props.auth;\n  console.log(project);\n\n  if (project) {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }\n    }, project.fileName));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grey-text text-darken-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, \"hello\");\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var id = ownProps.match.params.id; //route parameters id with own props of \n  //given component\n\n  var projects = state.firestore.data.projects;\n  var project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }; //this object is what we would like to attach to our props\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]))(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","connect","firestoreConnect","compose","Uploaded","props","project","auth","console","log","fileName","mapStateToProps","state","ownProps","id","match","params","projects","firestore","data","firebase","collection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MAChBC,OADgB,GACED,KADF,CAChBC,OADgB;AAAA,MACPC,IADO,GACEF,KADF,CACPE,IADO;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,MAAIA,OAAJ,EAAa;AACT,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,OAAO,CAACI,QAAb,CADF,CADJ;AAIE,GALN,MAKU;AACF,wBACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAKH;AACJ,CAfL;;AAkBI,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,MAAMC,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBF,EAAjC,CADyC,CACN;AACnC;;AACA,MAAMG,QAAQ,GAAGL,KAAK,CAACM,SAAN,CAAgBC,IAAhB,CAAqBF,QAAtC;AACA,MAAMX,OAAO,GAAGW,QAAQ,GAAGA,QAAQ,CAACH,EAAD,CAAX,GAAkB,IAA1C;AACA,SAAO;AACHR,IAAAA,OAAO,EAAEA,OADN;AAEHC,IAAAA,IAAI,EAAEK,KAAK,CAACQ,QAAN,CAAeb;AAFlB,GAAP,CALyC,CAQxC;AACJ,CATD;;AAYA,eAAeJ,OAAO,CAClBF,OAAO,CAACU,eAAD,CADW,EAElBT,gBAAgB,CAAC,CACb;AAAEmB,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAFE,CAAP,CAKbjB,QALa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\n\r\nconst Uploaded = (props) => {\r\n    const { project, auth } = props;\r\n    console.log(project)\r\n    if (project) {\r\n        return (\r\n            <ul>\r\n              <li>{project.fileName}</li>\r\n            </ul>\r\n        )}else{\r\n            return (\r\n                <div className='grey-text text-darken-3'>hello</div>\r\n            )\r\n           \r\n            \r\n        }\r\n    };\r\n\r\n\r\n    const mapStateToProps = (state, ownProps) => {\r\n        const id = ownProps.match.params.id//route parameters id with own props of \r\n        //given component\r\n        const projects = state.firestore.data.projects;\r\n        const project = projects ? projects[id] : null;\r\n        return {\r\n            project: project,\r\n            auth: state.firebase.auth\r\n        }//this object is what we would like to attach to our props\r\n    }\r\n\r\n\r\n    export default compose(\r\n        connect(mapStateToProps),\r\n        firestoreConnect([\r\n            { collection: 'projects' }\r\n        ])\r\n    )(Uploaded);\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}