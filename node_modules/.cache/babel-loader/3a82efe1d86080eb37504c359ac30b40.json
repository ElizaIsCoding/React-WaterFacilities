{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport Link from 'react-router-dom'; //import { Redirect } from 'react-router-dom';\n// class Uploaded extends Component {\n//     render() {\n//         const  {projects}  = this.props;\n//         console.log(projects);\n//         //if(!auth.uid) return <Redirect to='/signin' /> \n//         return (\n//             <>\n//                 <div>\n//                      {/* <h3>{projects.relatedFile}</h3>\n//                      <p>{projects.url}</p>   */}\n//                 </div>\n//         </>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);\n//import React from 'react';\n\nvar Uploaded = function Uploaded(props, ownProps) {\n  var project = props.project;\n  console.log(project);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-list section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, projects && projects.map(function (project) {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: '/uploaded/' + project.id,\n      key: project.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"relatedFile\",\n      src: project.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }));\n  }));\n}; //Uploaded();\n\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var projects = state.firestore.ordered.projects;\n  console.log(state);\n  return {\n    projects: projects,\n    auth: state.firebase.auth\n  }; //this object is what we would like to attach to our props\n};\n\nexport default compose( //compose connected several HOCs, just\n//like store enhancers in Index.js\nconnect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]) //triggers firestoreReducer to sync changes with firebase. takes in an \n//array as a parameter. passing an object of Project collection\n)(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","connect","firestoreConnect","compose","Link","Uploaded","props","ownProps","project","console","log","projects","map","id","url","mapStateToProps","state","firestore","ordered","auth","firebase","collection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,IAAP,MAAiB,kBAAjB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAAA,MAC7BC,OAD6B,GAClBF,KADkB,CAC7BE,OAD6B;AAElCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIG,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAa,UAAAJ,OAAO,EAAI;AACpC,wBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,eAAeA,OAAO,CAACK,EAAjC;AAAsC,MAAA,GAAG,EAAEL,OAAO,CAACK,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAC,aAAT;AAAuB,MAAA,GAAG,EAAEL,OAAO,CAACM,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GANa,CADhB,CADJ;AAcH,CAjBD,C,CAsBA;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQT,QAAR,EAAqB;AACzC,MAAMI,QAAQ,GAAGK,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBP,QAAzC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,SAAO;AACHL,IAAAA,QAAQ,EAAEA,QADP;AAEHQ,IAAAA,IAAI,EAAEH,KAAK,CAACI,QAAN,CAAeD;AAFlB,GAAP,CAHyC,CAMxC;AACJ,CAPD;;AASI,eAAehB,OAAO,EAAC;AACnB;AACAF,OAAO,CAACc,eAAD,CAFW,EAGlBb,gBAAgB,CAAC,CACb;AAAEmB,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAHE,CAMhB;AACF;AAPkB,CAAP,CAQbhB,QARa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport Link from 'react-router-dom';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n// class Uploaded extends Component {\r\n//     render() {\r\n//         const  {projects}  = this.props;\r\n//         console.log(projects);\r\n//         //if(!auth.uid) return <Redirect to='/signin' /> \r\n//         return (\r\n//             <>\r\n//                 <div>\r\n//                      {/* <h3>{projects.relatedFile}</h3>\r\n//                      <p>{projects.url}</p>   */}\r\n//                 </div>\r\n//         </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n\r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\n//import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Uploaded = (props, ownProps) => {\r\n  const {project} = props;\r\n    console.log(project)\r\n    return (\r\n        <div className=\"project-list section\">\r\n          { projects && projects.map(project => {\r\n            return(\r\n              <Link to={'/uploaded/' + project.id}  key={project.id}>\r\n                <img alt='relatedFile' src={project.url}></img>\r\n              </Link>\r\n            )\r\n          })}\r\n        </div>\r\n        \r\n    )\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n//Uploaded();\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const projects = state.firestore.ordered.projects;\r\n    console.log(state)\r\n    return {\r\n        projects: projects,\r\n        auth: state.firebase.auth,\r\n    }//this object is what we would like to attach to our props\r\n}\r\n    \r\n    export default compose(//compose connected several HOCs, just\r\n        //like store enhancers in Index.js\r\n        connect(mapStateToProps),\r\n        firestoreConnect([\r\n            { collection: 'projects' },\r\n    \r\n        ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n        //array as a parameter. passing an object of Project collection\r\n    )(Uploaded);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}