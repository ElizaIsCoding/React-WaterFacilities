{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, reactReduxFirebase, getFirebase, authIsReady } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from './config/fbConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  attachAuthIsReady: true\n};\nconst store = createStoreWithFirebase(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(fbConfig, firebase), reactReduxFirebase(fbConfig, config)));\nconst rrfProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\nstore.firebaseAuthIsReady(store).then(() => {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(ReactReduxFirebaseProvider, { ...rrfProps,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n  reportWebVitals();\n  registerServiceWorker();\n});","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","reportWebVitals","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","reduxFirestore","getFirestore","createFirestoreInstance","ReactReduxFirebaseProvider","reactReduxFirebase","getFirebase","authIsReady","fbConfig","firebase","config","attachAuthIsReady","store","createStoreWithFirebase","withExtraArgument","rrfProps","dispatch","firebaseAuthIsReady","then","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,uBAAvC,QAAsE,iBAAtE;AACA,SAASC,0BAAT,EAAqCC,kBAArC,EAAyDC,WAAzD,EAAsEC,WAAtE,QAAwF,sBAAxF;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,iBAAiB,EAAE;AADN,CAAf;AAKA,MAAMC,KAAK,GAAGC,uBAAuB,CACnCf,WADmC,EAEnCD,OAAO,CACPD,eAAe,CAACI,KAAK,CAACc,iBAAN,CAAwB;AAAER,EAAAA,WAAF;AAAeJ,EAAAA;AAAf,CAAxB,CAAD,CADR,EAEPD,cAAc,CAACO,QAAD,EAAWC,QAAX,CAFP,EAGPJ,kBAAkB,CAACG,QAAD,EAAWE,MAAX,CAHX,CAF4B,CAArC;AAUA,MAAMK,QAAQ,GAAG;AACfN,EAAAA,QADe;AAEfC,EAAAA,MAAM,EAAE,EAFO;AAGfM,EAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHD;AAIfb,EAAAA;AAJe,CAAjB;AASAS,KAAK,CAACK,mBAAN,CAA0BL,KAA1B,EAAiCM,IAAjC,CAAsC,MAAM;AAC1C3B,EAAAA,QAAQ,CAAC4B,MAAT,eACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAjB;AAAA,2BACE,QAAC,0BAAD,OAAgCG,QAAhC;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,EAMEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;AAQA3B,EAAAA,eAAe;AACfD,EAAAA,qBAAqB;AACpB,CAXH","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, reactReduxFirebase, getFirebase, authIsReady} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from './config/fbConfig';\n\nconst config = {\n  attachAuthIsReady: true,\n}\n\n\nconst store = createStoreWithFirebase(\n  rootReducer, \n  compose(\n  applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n  reduxFirestore(fbConfig, firebase),\n  reactReduxFirebase(fbConfig, config)\n));\n\n\n\nconst rrfProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\n\n\nstore.firebaseAuthIsReady(store).then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById('root')\n  );\n  reportWebVitals();\n  registerServiceWorker();\n  });\n\n\n"]},"metadata":{},"sourceType":"module"}