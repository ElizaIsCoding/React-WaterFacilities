{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'; //import { Redirect } from 'react-router-dom';\n// class Uploaded extends Component {\n//     render() {\n//         const  {projects}  = this.props;\n//         console.log(projects);\n//         //if(!auth.uid) return <Redirect to='/signin' /> \n//         return (\n//             <>\n//                 <div>\n//                      {/* <h3>{projects.relatedFile}</h3>\n//                      <p>{projects.url}</p>   */}\n//                 </div>\n//         </>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);\n//import React from 'react';\n\nvar Uploaded = function Uploaded(props) {\n  var projects = props.projects,\n      project = props.project,\n      id = props.id;\n  console.log(props);\n  return project ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n    href: project[id].url,\n    hight: \"100\",\n    width: \"100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, project[id].relatedFile)) : 'no details';\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var projects = state.firestore.ordered.projects;\n  console.log(ownProps);\n  return {\n    projects: projects,\n    auth: state.firebase.auth\n  }; //this object is what we would like to attach to our props\n};\n\nexport default compose( //compose connected several HOCs, just\n//like store enhancers in Index.js\nconnect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]) //triggers firestoreReducer to sync changes with firebase. takes in an \n//array as a parameter. passing an object of Project collection\n)(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","connect","firestoreConnect","compose","Uploaded","props","projects","project","id","console","log","url","relatedFile","mapStateToProps","state","ownProps","firestore","ordered","auth","firebase","collection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MACjBC,QADiB,GACQD,KADR,CACjBC,QADiB;AAAA,MACPC,OADO,GACQF,KADR,CACPE,OADO;AAAA,MACEC,EADF,GACQH,KADR,CACEG,EADF;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,SACIE,OAAO,gBACD,uDACE;AAAG,IAAA,IAAI,EAAEA,OAAO,CAACC,EAAD,CAAP,CAAYG,GAArB;AAA0B,IAAA,KAAK,EAAC,KAAhC;AAAsC,IAAA,KAAK,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmDJ,OAAO,CAACC,EAAD,CAAP,CAAYI,WAA/D,CADF,CADC,GAIJ,YALP;AAOH,CAVD;;AAaA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,MAAMT,QAAQ,GAAGQ,KAAK,CAACE,SAAN,CAAgBC,OAAhB,CAAwBX,QAAzC;AACCG,EAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACD,SAAO;AACHT,IAAAA,QAAQ,EAAEA,QADP;AAEHY,IAAAA,IAAI,EAAEJ,KAAK,CAACK,QAAN,CAAeD;AAFlB,GAAP,CAHyC,CAMxC;AACJ,CAPD;;AASI,eAAef,OAAO,EAAC;AACnB;AACAF,OAAO,CAACY,eAAD,CAFW,EAGlBX,gBAAgB,CAAC,CACb;AAAEkB,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAHE,CAMhB;AACF;AAPkB,CAAP,CAQbhB,QARa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n// class Uploaded extends Component {\r\n//     render() {\r\n//         const  {projects}  = this.props;\r\n//         console.log(projects);\r\n//         //if(!auth.uid) return <Redirect to='/signin' /> \r\n//         return (\r\n//             <>\r\n//                 <div>\r\n//                      {/* <h3>{projects.relatedFile}</h3>\r\n//                      <p>{projects.url}</p>   */}\r\n//                 </div>\r\n//         </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n\r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\n//import React from 'react';\r\n\r\n\r\n\r\nconst Uploaded = (props) => {\r\n    const {projects, project, id} = props;\r\n    console.log(props)\r\n    return (\r\n        project ? (\r\n              <>\r\n                <a href={project[id].url} hight='100' width='100'>{project[id].relatedFile}</a>\r\n             </>\r\n      ) : ('no details')\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const projects = state.firestore.ordered.projects;\r\n     console.log(ownProps)\r\n    return {\r\n        projects: projects,\r\n        auth: state.firebase.auth,\r\n    }//this object is what we would like to attach to our props\r\n}\r\n    \r\n    export default compose(//compose connected several HOCs, just\r\n        //like store enhancers in Index.js\r\n        connect(mapStateToProps),\r\n        firestoreConnect([\r\n            { collection: 'projects' },\r\n    \r\n        ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n        //array as a parameter. passing an object of Project collection\r\n    )(Uploaded);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}