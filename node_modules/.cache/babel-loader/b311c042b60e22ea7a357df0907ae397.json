{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nvar Uploaded = function Uploaded(props) {\n  var project = props.project;\n  console.log('state::', state);\n\n  if (project) {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }\n    }, project.fileName));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grey-text text-darken-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, \"hello\");\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    project: state.project.projects\n  }; //this object is what we would like to attach to our props\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]))(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","connect","firestoreConnect","compose","Uploaded","props","project","console","log","state","fileName","mapStateToProps","projects","collection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MAChBC,OADgB,GACJD,KADI,CAChBC,OADgB;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB;;AACA,MAAIH,OAAJ,EAAa;AACT,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,OAAO,CAACI,QAAb,CADF,CADJ;AAIE,GALN,MAKU;AACF,wBACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAKH;AACJ,CAfL;;AAkBI,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACF,KAAD,EAAW;AAC/BF,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,SAAO;AACHH,IAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcM;AADpB,GAAP,CAF+B,CAI9B;AACJ,CALD;;AAQA,eAAeT,OAAO,CAClBF,OAAO,CAACU,eAAD,CADW,EAElBT,gBAAgB,CAAC,CACb;AAAEW,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAFE,CAAP,CAKbT,QALa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\n\r\nconst Uploaded = (props) => {\r\n    const { project } = props;\r\n    console.log('state::', state)\r\n    if (project) {\r\n        return (\r\n            <ul>\r\n              <li>{project.fileName}</li>\r\n            </ul>\r\n        )}else{\r\n            return (\r\n                <div className='grey-text text-darken-3'>hello</div>\r\n            )\r\n           \r\n            \r\n        }\r\n    };\r\n\r\n\r\n    const mapStateToProps = (state) => {\r\n        console.log(state)\r\n        return {\r\n            project: state.project.projects\r\n        }//this object is what we would like to attach to our props\r\n    }\r\n\r\n\r\n    export default compose(\r\n        connect(mapStateToProps),\r\n        firestoreConnect([\r\n            { collection: 'projects' }\r\n        ])\r\n    )(Uploaded);\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}