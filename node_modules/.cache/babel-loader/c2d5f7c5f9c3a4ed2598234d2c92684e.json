{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\",\n    _this2 = this;\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'; //import { Redirect } from 'react-router-dom';\n// class Uploaded extends Component {\n//     render() {\n//         const  {projects}  = this.props;\n//         console.log(projects);\n//         //if(!auth.uid) return <Redirect to='/signin' /> \n//         return (\n//             <>\n//                 <div>\n//                      {/* <h3>{projects.relatedFile}</h3>\n//                      <p>{projects.url}</p>   */}\n//                 </div>\n//         </>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);\n//import React from 'react';\n\nfunction handleShowFile() {\n  var _this = this;\n\n  document.getElementById('relFile').then(function () {\n    /*#__PURE__*/\n    React.createElement(\"img\", {\n      src: project.url,\n      alt: \"relaedFile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    });\n  });\n}\n\nvar Uploaded = function Uploaded(props) {\n  var project = props.project;\n  console.log(project);\n  return project ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"felFile\",\n    onClick: handleShowFile(),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, project.relatedFile)) : 'no details';\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var projects = state.firestore.ordered.projects;\n  var project = ownProps.project;\n  console.log(project);\n  return {\n    projects: projects,\n    auth: state.firebase.auth\n  }; //this object is what we would like to attach to our props\n};\n\nexport default compose( //compose connected several HOCs, just\n//like store enhancers in Index.js\nconnect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]) //triggers firestoreReducer to sync changes with firebase. takes in an \n//array as a parameter. passing an object of Project collection\n)(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","connect","firestoreConnect","compose","handleShowFile","document","getElementById","then","project","url","Uploaded","props","console","log","relatedFile","mapStateToProps","state","ownProps","projects","firestore","ordered","auth","firebase","collection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACtBC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,IAAnC,CAAwC,YAAM;AAC1C;AAAA;AAAK,MAAA,GAAG,EAAEC,OAAO,CAACC,GAAlB;AAAuB,MAAA,GAAG,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,GAFD;AAIH;;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MACjBH,OADiB,GACNG,KADM,CACjBH,OADiB;AAExBI,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,SACIA,OAAO,gBACD,uDACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,OAAO,EAAEJ,cAAc,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CI,OAAO,CAACM,WAAtD,CADF,CADC,GAIJ,YALP;AAOH,CAVD;;AAaA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,MAAMC,QAAQ,GAAGF,KAAK,CAACG,SAAN,CAAgBC,OAAhB,CAAwBF,QAAzC;AACA,MAAMV,OAAO,GAAGS,QAAQ,CAACT,OAAzB;AACCI,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACD,SAAO;AACHU,IAAAA,QAAQ,EAAEA,QADP;AAEHG,IAAAA,IAAI,EAAEL,KAAK,CAACM,QAAN,CAAeD;AAFlB,GAAP,CAJyC,CAOxC;AACJ,CARD;;AAUI,eAAelB,OAAO,EAAC;AACnB;AACAF,OAAO,CAACc,eAAD,CAFW,EAGlBb,gBAAgB,CAAC,CACb;AAAEqB,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAHE,CAMhB;AACF;AAPkB,CAAP,CAQbb,QARa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n// class Uploaded extends Component {\r\n//     render() {\r\n//         const  {projects}  = this.props;\r\n//         console.log(projects);\r\n//         //if(!auth.uid) return <Redirect to='/signin' /> \r\n//         return (\r\n//             <>\r\n//                 <div>\r\n//                      {/* <h3>{projects.relatedFile}</h3>\r\n//                      <p>{projects.url}</p>   */}\r\n//                 </div>\r\n//         </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n\r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\n//import React from 'react';\r\n\r\nfunction handleShowFile() {\r\n    document.getElementById('relFile').then(() => {\r\n        <img src={project.url} alt='relaedFile'></img>\r\n    })\r\n   \r\n}\r\n\r\nconst Uploaded = (props) => {\r\n    const {project} = props;\r\n    console.log(project)\r\n    return (\r\n        project ? (\r\n              <>\r\n                <div id='felFile' onClick={handleShowFile()}>{project.relatedFile}</div>\r\n             </>\r\n      ) : ('no details')\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const projects = state.firestore.ordered.projects;\r\n    const project = ownProps.project;\r\n     console.log(project)\r\n    return {\r\n        projects: projects,\r\n        auth: state.firebase.auth,\r\n    }//this object is what we would like to attach to our props\r\n}\r\n    \r\n    export default compose(//compose connected several HOCs, just\r\n        //like store enhancers in Index.js\r\n        connect(mapStateToProps),\r\n        firestoreConnect([\r\n            { collection: 'projects' },\r\n    \r\n        ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n        //array as a parameter. passing an object of Project collection\r\n    )(Uploaded);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}