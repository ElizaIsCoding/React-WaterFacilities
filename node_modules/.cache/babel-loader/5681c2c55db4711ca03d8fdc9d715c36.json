{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n//import firebase from 'firebase/app';\nimport 'firebase/storage'; // import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from '../../components/action-types';\n\nexport var createProject = function createProject(project) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase,\n        getFirestore = _ref.getFirestore;\n    var firestore = getFirebase().firestore();\n    var profile = getState().firebase.profile;\n    var authorId = getState().firebase.auth.uid;\n    var projectId = Math.floor(Math.random() * 100000);\n    firestore.collection('projects').add(_objectSpread({}, project, {\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date(),\n      projectId: projectId\n    })).then(function () {\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project: project\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err: err\n      });\n    });\n  };\n}; // we are passing this.state to this project action. Inside here we are\n// returning a function. We used thunk to do this and we get access to a \n//dispatch and store enhancers. Here we are pausing dispatch while we are\n// asyncroniusly adding a document to firebase.\n// export const uploadRelated = (file) => {\n//     return (dispatch) => {\n\nexport var addInfo = function addInfo(project) {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase,\n        getFirestore = _ref2.getFirestore;\n    var firebase = getFirebase();\n    var firestore = getFirebase().firestore();\n    var projectId = getState().project.projectId; //const dbRef = firebase.database().ref();\n\n    firestore.collection('projects').doc(projectId).set({\n      relatedFile: project.relatedFile,\n      url: project.url\n    }).then(function () {\n      dispatch({\n        type: 'ADD_INFO',\n        project: project\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/store/actions/projectActions.js"],"names":["createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","authorId","auth","uid","projectId","Math","floor","random","collection","add","authorFirstName","firstName","authorLastName","lastName","createdAt","Date","then","type","catch","err","addInfo","doc","set","relatedFile","url"],"mappings":";AAAA;AACA,OAAO,kBAAP,C,CAEA;;AAEA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACtC,SAAO,UAACC,QAAD,EAAWC,QAAX,QAAqD;AAAA,QAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,QAAlBC,YAAkB,QAAlBA,YAAkB;AACxD,QAAMC,SAAS,GAAGF,WAAW,GAAGE,SAAd,EAAlB;AACA,QAAMC,OAAO,GAAGJ,QAAQ,GAAGK,QAAX,CAAoBD,OAApC;AACA,QAAME,QAAQ,GAAGN,QAAQ,GAAGK,QAAX,CAAoBE,IAApB,CAAyBC,GAA1C;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAlB;AAGAT,IAAAA,SAAS,CAACU,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,mBACOhB,OADP;AAEIiB,MAAAA,eAAe,EAAEX,OAAO,CAACY,SAF7B;AAGIC,MAAAA,cAAc,EAAEb,OAAO,CAACc,QAH5B;AAIIZ,MAAAA,QAAQ,EAAEA,QAJd;AAKIa,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EALf;AAMIX,MAAAA,SAAS,EAAEA;AANf,QAOGY,IAPH,CAOQ,YAAM;AACVtB,MAAAA,QAAQ,CAAC;AAACuB,QAAAA,IAAI,EAAE,gBAAP;AAAyBxB,QAAAA,OAAO,EAAPA;AAAzB,OAAD,CAAR;AACH,KATD,EASGyB,KATH,CASS,UAAAC,GAAG,EAAI;AACZzB,MAAAA,QAAQ,CAAC;AAACuB,QAAAA,IAAI,EAAE,sBAAP;AAA+BE,QAAAA,GAAG,EAAHA;AAA/B,OAAD,CAAR;AACH,KAXD;AAcH,GArBD;AAsBH,CAvBM,C,CAuBL;AACF;AACA;AACA;AAIA;AACA;;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAC3B,OAAD,EAAa;AAChC,SAAM,UAACC,QAAD,EAAWC,QAAX,SAAqD;AAAA,QAA/BC,WAA+B,SAA/BA,WAA+B;AAAA,QAAlBC,YAAkB,SAAlBA,YAAkB;AACvD,QAAMG,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAME,SAAS,GAAGF,WAAW,GAAGE,SAAd,EAAlB;AACA,QAAMM,SAAS,GAAGT,QAAQ,GAAGF,OAAX,CAAmBW,SAArC,CAHuD,CAIvD;;AACAN,IAAAA,SAAS,CAACU,UAAV,CAAqB,UAArB,EAAiCa,GAAjC,CAAqCjB,SAArC,EAAgDkB,GAAhD,CAAoD;AAChDC,MAAAA,WAAW,EAAE9B,OAAO,CAAC8B,WAD2B;AAEhDC,MAAAA,GAAG,EAAE/B,OAAO,CAAC+B;AAFmC,KAApD,EAKCR,IALD,CAKM,YAAM;AACRtB,MAAAA,QAAQ,CAAC;AAACuB,QAAAA,IAAI,EAAE,UAAP;AAAmBxB,QAAAA,OAAO,EAAPA;AAAnB,OAAD,CAAR;AACH,KAPD;AAQH,GAbD;AAcH,CAfM","sourcesContent":["//import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\n\r\n// import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from '../../components/action-types';\r\n\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirebase().firestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        const projectId = Math.floor(Math.random() * 100000);\r\n        \r\n        \r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date(),\r\n            projectId: projectId,\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project });\r\n        }).catch(err => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        });\r\n        \r\n        \r\n    }\r\n};// we are passing this.state to this project action. Inside here we are\r\n// returning a function. We used thunk to do this and we get access to a \r\n//dispatch and store enhancers. Here we are pausing dispatch while we are\r\n// asyncroniusly adding a document to firebase.\r\n\r\n\r\n\r\n// export const uploadRelated = (file) => {\r\n//     return (dispatch) => {\r\n\r\nexport const addInfo = (project) => {\r\n    return(dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirebase().firestore();\r\n        const projectId = getState().project.projectId;\r\n        //const dbRef = firebase.database().ref();\r\n        firestore.collection('projects').doc(projectId).set({\r\n            relatedFile: project.relatedFile,\r\n            url: project.url,\r\n            \r\n        })\r\n        .then(() => {\r\n            dispatch({type: 'ADD_INFO', project }); \r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}