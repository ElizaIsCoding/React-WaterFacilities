{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from './config/fbConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(fbConfig, firebase), reactReduxFirebase(fbConfig, {\n  attachAuthIsReady: true\n})));\nconst rrfProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(ReactReduxFirebaseProvider, { ...rrfProps,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n  reportWebVitals();\n  registerServiceWorker();\n});","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","reportWebVitals","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","reduxFirestore","getFirestore","createFirestoreInstance","ReactReduxFirebaseProvider","reactReduxFirebase","getFirebase","fbConfig","firebase","store","withExtraArgument","attachAuthIsReady","rrfProps","config","dispatch","firebaseAuthIsReady","then","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,uBAAvC,QAAsE,iBAAtE;AACA,SAASC,0BAAT,EAAqCC,kBAArC,EAAyDC,WAAzD,QAA2E,sBAA3E;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,KAAK,GAAGd,WAAW,CACvBG,WADuB,EAEvBD,OAAO,CACPD,eAAe,CAACI,KAAK,CAACU,iBAAN,CAAwB;AAAEJ,EAAAA,WAAF;AAAeJ,EAAAA;AAAf,CAAxB,CAAD,CADR,EAEPD,cAAc,CAACM,QAAD,EAAWC,QAAX,CAFP,EAGPH,kBAAkB,CAACE,QAAD,EAAW;AAACI,EAAAA,iBAAiB,EAAE;AAApB,CAAX,CAHX,CAFgB,CAAzB;AAUA,MAAMC,QAAQ,GAAG;AACfJ,EAAAA,QADe;AAEfK,EAAAA,MAAM,EAAE,EAFO;AAGfC,EAAAA,QAAQ,EAAEL,KAAK,CAACK,QAHD;AAIfX,EAAAA;AAJe,CAAjB;AASAM,KAAK,CAACM,mBAAN,CAA0BC,IAA1B,CAA+B,MAAM;AACnCzB,EAAAA,QAAQ,CAAC0B,MAAT,eACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA,2BACE,QAAC,0BAAD,OAAgCG,QAAhC;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,EAMEM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;AAQAzB,EAAAA,eAAe;AACfD,EAAAA,qBAAqB;AACpB,CAXH","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from './config/fbConfig';\n\nconst store = createStore(\n  rootReducer, \n  compose(\n  applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n  reduxFirestore(fbConfig, firebase),\n  reactReduxFirebase(fbConfig, {attachAuthIsReady: true})\n));\n\n\n\nconst rrfProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\n\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById('root')\n  );\n  reportWebVitals();\n  registerServiceWorker();\n  })\n\n\n"]},"metadata":{},"sourceType":"module"}