{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'; // //import { Redirect } from 'react-router-dom';\n//import ProjectSummary from \"./projects/ProjectSummary\";\n// class Uploaded extends Component {\n//     render() {\n//         const {projects} = this.props;\n//         console.log(this.props);\n//         //if(!auth.uid) return <Redirect to='/signin' /> \n//         return (\n//             <div className=\"dashboard container\">\n//                 <div className=\"row\">\n//                     <div className=\"col s6 m6\">\n//                     <ul>\n//                       {projects && projects.map(project => {\n//                           return (\n//                               <div>\n//                                 <span>{project.relatedFile}</span>\n//                                 <span>{project.url}</span>\n//                               </div>\n//                           )}\n//                       )}\n//                       </ul>\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//    console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);\n// import React from 'react';\n\nvar Uploaded = function Uploaded(props) {\n  //const [projects] = this.props;\n  console.log(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card z-depth-0 project-summary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    // state is passed form rootReducer,\n    //project is a property of the state in rootReducer\n    //projects is a property of the project object in\n    // projectReducer, initState\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose( //compose connected several HOCs, just\n//like store enhancers in Index.js\nconnect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]) //triggers firestoreReducer to sync changes with firebase. takes in an \n//array as a parameter. passing an object of Project collection\n)(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","connect","firestoreConnect","compose","Uploaded","props","console","log","mapStateToProps","state","projects","firestore","ordered","auth","firebase","collection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH,CAXD;;AAcA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC9B;AACC,SAAO;AACHC,IAAAA,QAAQ,EAAED,KAAK,CAACE,SAAN,CAAgBC,OAAhB,CAAwBF,QAD/B;AACwC;AAC3C;AACA;AACA;AACAG,IAAAA,IAAI,EAAEJ,KAAK,CAACK,QAAN,CAAeD;AALlB,GAAP;AAOH,CATD;;AAWA,eAAeV,OAAO,EAAC;AACnB;AACAF,OAAO,CAACO,eAAD,CAFW,EAGlBN,gBAAgB,CAAC,CACb;AAAEa,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAHE,CAMhB;AACF;AAPkB,CAAP,CAQbX,QARa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n// //import { Redirect } from 'react-router-dom';\r\n\r\n//import ProjectSummary from \"./projects/ProjectSummary\";\r\n\r\n\r\n// class Uploaded extends Component {\r\n//     render() {\r\n        \r\n//         const {projects} = this.props;\r\n//         console.log(this.props);\r\n//         //if(!auth.uid) return <Redirect to='/signin' /> \r\n//         return (\r\n//             <div className=\"dashboard container\">\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col s6 m6\">\r\n//                     <ul>\r\n//                       {projects && projects.map(project => {\r\n//                           return (\r\n//                               <div>\r\n//                                 <span>{project.relatedFile}</span>\r\n//                                 <span>{project.url}</span>\r\n//                               </div>\r\n                              \r\n//                           )}\r\n//                       )}\r\n//                       </ul>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//    console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n        \r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\n// import React from 'react';\r\n\r\n\r\n\r\nconst Uploaded = (props) => {\r\n    //const [projects] = this.props;\r\n    console.log(props)\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            {/* <div className=\"card-content grey-text text-darken-3 z-depth-4\">\r\n                <p className=\"id center-align\">{project.relatedFile}</p>\r\n                <span className=\"card-title\">{project.url}</span>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n   //console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n        //project is a property of the state in rootReducer\r\n        //projects is a property of the project object in\r\n        // projectReducer, initState\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\nexport default compose(//compose connected several HOCs, just\r\n    //like store enhancers in Index.js\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' },\r\n        \r\n    ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n    //array as a parameter. passing an object of Project collection\r\n)(Uploaded);\r\n\r\n"]},"metadata":{},"sourceType":"module"}