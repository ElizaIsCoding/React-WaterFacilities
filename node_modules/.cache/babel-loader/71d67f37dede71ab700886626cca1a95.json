{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport React from 'react';\nimport { useEffect } from 'react'; // import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from '../../components/action-types';\n\nexport var createProject = function createProject(project) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase,\n        getFirestore = _ref.getFirestore;\n    var firestore = getFirebase().firestore();\n    var profile = getState().firebase.profile;\n    var authorId = getState().firebase.auth.uid;\n    var projectId = Math.floor(Math.random() * 100000);\n    firestore.collection('projects').add(_objectSpread({}, project, {\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date(),\n      projectId: projectId\n    })).then(function () {\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project: project\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err: err\n      });\n    });\n  };\n}; // we are passing this.state to this project action. Inside here we are\n// returning a function. We used thunk to do this and we get access to a \n//dispatch and store enhancers. Here we are pausing dispatch while we are\n// asyncroniusly adding a document to firebase.\n\nexport var uploadRelated = function uploadRelated(file) {\n  console.log(file);\n  useEffect(function (file) {\n    var storageRef = firebase.storage().ref();\n    var fileRef = storageRef.child(file.name);\n    fileRef.put(file);\n    var url = fileRef.getDownloadURL();\n    return function (dispatch) {\n      dispatch({\n        type: 'UPLOAD_RELATED',\n        url: url\n      });\n    };\n  }, []); //      .then((url) => {\n  //        const relatedFile = file.name\n  //          this.setState(\n  //             prevState => ({\n  //                 relatedFile: [...prevState.relatedFile, relatedFile],\n  //                 url: [...prevState.url, url]\n  //                         })\n  //                     )\n  //         .then(() => {\n  //                         dispatch({type: 'UPLOAD_RELATED', relatedFile})\n  //                     })\n  //                    .catch((err) => {\n  //                        dispatch({ type: 'UPLOAD_RELATED_ERROR', err})\n  //                    });\n  // }\n  //      )\n};","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/store/actions/projectActions.js"],"names":["firebase","React","useEffect","createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","profile","authorId","auth","uid","projectId","Math","floor","random","collection","add","authorFirstName","firstName","authorLastName","lastName","createdAt","Date","then","type","catch","err","uploadRelated","file","console","log","storageRef","storage","ref","fileRef","child","name","put","url","getDownloadURL"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,OAAxB,C,CACA;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACtC,SAAO,UAACC,QAAD,EAAWC,QAAX,QAAqD;AAAA,QAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,QAAlBC,YAAkB,QAAlBA,YAAkB;AACxD,QAAMC,SAAS,GAAGF,WAAW,GAAGE,SAAd,EAAlB;AACA,QAAMC,OAAO,GAAGJ,QAAQ,GAAGN,QAAX,CAAoBU,OAApC;AACA,QAAMC,QAAQ,GAAGL,QAAQ,GAAGN,QAAX,CAAoBY,IAApB,CAAyBC,GAA1C;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAlB;AAGAR,IAAAA,SAAS,CAACS,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,mBACOf,OADP;AAEIgB,MAAAA,eAAe,EAAEV,OAAO,CAACW,SAF7B;AAGIC,MAAAA,cAAc,EAAEZ,OAAO,CAACa,QAH5B;AAIIZ,MAAAA,QAAQ,EAAEA,QAJd;AAKIa,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EALf;AAMIX,MAAAA,SAAS,EAAEA;AANf,QAOGY,IAPH,CAOQ,YAAM;AACVrB,MAAAA,QAAQ,CAAC;AAACsB,QAAAA,IAAI,EAAE,gBAAP;AAAyBvB,QAAAA,OAAO,EAAPA;AAAzB,OAAD,CAAR;AACH,KATD,EASGwB,KATH,CASS,UAAAC,GAAG,EAAI;AACZxB,MAAAA,QAAQ,CAAC;AAACsB,QAAAA,IAAI,EAAE,sBAAP;AAA+BE,QAAAA,GAAG,EAAHA;AAA/B,OAAD,CAAR;AACH,KAXD;AAcH,GArBD;AAsBH,CAvBM,C,CAuBL;AACF;AACA;AACA;;AAIA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD7B,EAAAA,SAAS,CAAC,UAAC6B,IAAD,EAAU;AACf,QAAMG,UAAU,GAAGlC,QAAQ,CAACmC,OAAT,GAAmBC,GAAnB,EAAnB;AACA,QAAMC,OAAO,GAAGH,UAAU,CAACI,KAAX,CAAiBP,IAAI,CAACQ,IAAtB,CAAhB;AACAF,IAAAA,OAAO,CAACG,GAAR,CAAYT,IAAZ;AACA,QAAMU,GAAG,GAAGJ,OAAO,CAACK,cAAR,EAAZ;AACD,WAAO,UAACrC,QAAD,EAAc;AACnBA,MAAAA,QAAQ,CAAC;AAACsB,QAAAA,IAAI,EAAE,gBAAP;AAAyBc,QAAAA,GAAG,EAAHA;AAAzB,OAAD,CAAR;AACD,KAFD;AAGH,GARQ,EAQN,EARM,CAAT,CAFoC,CAqBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEC,CAvCE","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport React from 'react';\r\nimport {useEffect} from 'react';\r\n// import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from '../../components/action-types';\r\n\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirebase().firestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        const projectId = Math.floor(Math.random() * 100000);\r\n        \r\n        \r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date(),\r\n            projectId: projectId,\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project });\r\n        }).catch(err => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        });\r\n        \r\n        \r\n    }\r\n};// we are passing this.state to this project action. Inside here we are\r\n// returning a function. We used thunk to do this and we get access to a \r\n//dispatch and store enhancers. Here we are pausing dispatch while we are\r\n// asyncroniusly adding a document to firebase.\r\n\r\n\r\n\r\nexport const uploadRelated = (file) => {\r\n    console.log(file);\r\n   useEffect((file) => {\r\n        const storageRef = firebase.storage().ref();\r\n        const fileRef = storageRef.child(file.name);\r\n        fileRef.put(file)\r\n        const url = fileRef.getDownloadURL()\r\n       return (dispatch) => {\r\n         dispatch({type: 'UPLOAD_RELATED', url})\r\n       }\r\n   }, [])\r\n        \r\n    \r\n \r\n \r\n    \r\n    \r\n    \r\n     \r\n       \r\n\r\n    //      .then((url) => {\r\n    //        const relatedFile = file.name\r\n    //          this.setState(\r\n    //             prevState => ({\r\n    //                 relatedFile: [...prevState.relatedFile, relatedFile],\r\n    //                 url: [...prevState.url, url]\r\n    //                         })\r\n    //                     )\r\n    //         .then(() => {\r\n    //                         dispatch({type: 'UPLOAD_RELATED', relatedFile})\r\n    //                     })\r\n    //                    .catch((err) => {\r\n    //                        dispatch({ type: 'UPLOAD_RELATED_ERROR', err})\r\n    //                    });\r\n        \r\n    // }\r\n    //      )\r\n        \r\n    }\r\n\r\n"]},"metadata":{},"sourceType":"module"}