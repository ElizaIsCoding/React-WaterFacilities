{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\projects\\\\ProjectDetails.js\";\nimport React from 'react'; // rsf for functional component from snippet\n\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectDetails = props => {\n  const {\n    project,\n    auth\n  } = props;\n  if (!auth.uid) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/signin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 29\n  }, this);\n\n  if (project) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container section project-details\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card z-depth-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-title\",\n            children: [project.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-action grey-lighten-4 grey-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Posted by \", project.authorFirstName, \" \", project.authorLastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"24th of April 16.00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading project...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = ProjectDetails;\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id; //route parameters id with own props of \n  //given component\n\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }; //this object is what we would like to attach to our props\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]))(ProjectDetails);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectDetails\");","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/projects/ProjectDetails.js"],"names":["React","connect","firestoreConnect","compose","Redirect","ProjectDetails","props","project","auth","uid","title","content","authorFirstName","authorLastName","mapStateToProps","state","ownProps","id","match","params","projects","firestore","data","firebase","collection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,KAA1B;AACG,MAAG,CAACE,IAAI,CAACC,GAAT,EAAc,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;;AACjB,MAAIF,OAAJ,EAAa;AACT,wBACI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,uBAA8BA,OAAO,CAACG,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIH,OAAO,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,sCAAf;AAAA,kCACI;AAAA,qCAAgBJ,OAAO,CAACK,eAAxB,OAA0CL,OAAO,CAACM,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAfD,MAeO;AACH,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AAEJ,CA1BD;;KAAMR,c;;AA4BN,MAAMS,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,QAAMC,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBF,EAAjC,CADyC,CACN;AACnC;;AACA,QAAMG,QAAQ,GAAGL,KAAK,CAACM,SAAN,CAAgBC,IAAhB,CAAqBF,QAAtC;AACA,QAAMb,OAAO,GAAGa,QAAQ,GAAGA,QAAQ,CAACH,EAAD,CAAX,GAAkB,IAA1C;AACA,SAAO;AACHV,IAAAA,OAAO,EAAEA,OADN;AAEHC,IAAAA,IAAI,EAAEO,KAAK,CAACQ,QAAN,CAAef;AAFlB,GAAP,CALyC,CAQxC;AACJ,CATD;;AAWA,eAAeL,OAAO,CAClBF,OAAO,CAACa,eAAD,CADW,EAElBZ,gBAAgB,CAAC,CACb;AAAEsB,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAFE,CAAP,CAKbnB,cALa,CAAf","sourcesContent":["import React from 'react'; // rsf for functional component from snippet\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n       if(!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title} </span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey-lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>24th of April 16.00</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='container center'>\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id//route parameters id with own props of \r\n    //given component\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }//this object is what we would like to attach to our props\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);\r\n\r\n"]},"metadata":{},"sourceType":"module"}