{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'; //import { Redirect } from 'react-router-dom';\n// class Uploaded extends Component {\n//     render() {\n//         const  {projects}  = this.props;\n//         console.log(projects);\n//         //if(!auth.uid) return <Redirect to='/signin' /> \n//         return (\n//             <>\n//                 <div>\n//                      {/* <h3>{projects.relatedFile}</h3>\n//                      <p>{projects.url}</p>   */}\n//                 </div>\n//         </>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);\n//import React from 'react';\n\nvar Uploaded = function Uploaded(props) {\n  var projects = props.projects;\n  console.log(projects.url);\n  return projects ? /*#__PURE__*/React.createElement(\"a\", {\n    href: \"relatedFile\",\n    src: projects.url,\n    hight: \"100\",\n    width: \"100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: projects.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 22\n    }\n  }, projects[0].relatedFile)) : 'no details';\n};\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var projects = state.firestore.ordered.projects;\n  console.log({\n    projects: projects\n  });\n  return {\n    projects: projects,\n    auth: state.firebase.auth\n  }; //this object is what we would like to attach to our props\n};\n\nexport default compose( //compose connected several HOCs, just\n//like store enhancers in Index.js\nconnect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]) //triggers firestoreReducer to sync changes with firebase. takes in an \n//array as a parameter. passing an object of Project collection\n)(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","connect","firestoreConnect","compose","Uploaded","props","projects","console","log","url","id","relatedFile","mapStateToProps","state","firestore","ordered","auth","firebase","collection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MACjBC,QADiB,GACLD,KADK,CACjBC,QADiB;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAArB;AACA,SACIH,QAAQ,gBAEA;AAAG,IAAA,IAAI,EAAC,aAAR;AAAsB,IAAA,GAAG,EAAEA,QAAQ,CAACG,GAApC;AAAyC,IAAA,KAAK,EAAC,KAA/C;AAAqD,IAAA,KAAK,EAAC,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAK,IAAA,GAAG,EAAEH,QAAQ,CAACI,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,WADf,CADL,CAFA,GASL,YAVP;AAYH,CAfD;;AAkBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQR,KAAR,EAAkB;AAEtC,MAAMC,QAAQ,GAAGO,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBT,QAAzC;AAECC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA,QAAQ,EAARA;AAAD,GAAZ;AACD,SAAO;AACHA,IAAAA,QAAQ,EAAEA,QADP;AAEHU,IAAAA,IAAI,EAAEH,KAAK,CAACI,QAAN,CAAeD;AAFlB,GAAP,CALsC,CAQrC;AACJ,CATD;;AAWI,eAAeb,OAAO,EAAC;AACnB;AACAF,OAAO,CAACW,eAAD,CAFW,EAGlBV,gBAAgB,CAAC,CACb;AAAEgB,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAHE,CAMhB;AACF;AAPkB,CAAP,CAQbd,QARa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n// class Uploaded extends Component {\r\n//     render() {\r\n//         const  {projects}  = this.props;\r\n//         console.log(projects);\r\n//         //if(!auth.uid) return <Redirect to='/signin' /> \r\n//         return (\r\n//             <>\r\n//                 <div>\r\n//                      {/* <h3>{projects.relatedFile}</h3>\r\n//                      <p>{projects.url}</p>   */}\r\n//                 </div>\r\n//         </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n\r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\n//import React from 'react';\r\n\r\n\r\n\r\nconst Uploaded = (props) => {\r\n    const {projects} = props;\r\n    console.log(projects.url)\r\n    return (\r\n        projects ? (\r\n              \r\n                <a href='relatedFile' src={projects.url} hight='100' width='100'>\r\n                     <div key={projects.id}>\r\n                       {projects[0].relatedFile}\r\n                     </div> \r\n                </a>\r\n  \r\n         \r\n      ) : ('no details')\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    \r\n    const projects = state.firestore.ordered.projects;\r\n    \r\n     console.log({projects})\r\n    return {\r\n        projects: projects,\r\n        auth: state.firebase.auth,\r\n    }//this object is what we would like to attach to our props\r\n}\r\n    \r\n    export default compose(//compose connected several HOCs, just\r\n        //like store enhancers in Index.js\r\n        connect(mapStateToProps),\r\n        firestoreConnect([\r\n            { collection: 'projects' },\r\n    \r\n        ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n        //array as a parameter. passing an object of Project collection\r\n    )(Uploaded);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}