{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nexport var createProject = function createProject(project) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase,\n        getFirestore = _ref.getFirestore;\n    var firestore = getFirebase().firestore();\n    var profile = getState().firebase.profile;\n    var authorId = getState().firebase.auth.uid;\n    var projectId = Math.floor(Math.random() * 100000);\n    firestore.collection('projects').add(_objectSpread({}, project, {\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date(),\n      projectId: projectId\n    })).then(function () {\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project: project\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err: err\n      });\n    });\n  };\n}; // we are passing this.state to this project action. Inside here we are\n// returning a function. We used thunk to do this and we get access to a \n//dispatch and store enhancers. Here we are pausing dispatch while we are\n// asyncroniusly adding a document to firebase.\n\nexport var uploadRelated = function uploadRelated(project, e) {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase,\n        getFirestore = _ref2.getFirestore;\n    var firestore = getFirebase().firestore();\n    var file = e.target.files[0];\n    var storageRef = firebase.storage().ref();\n    var fileRef = storageRef.child(file.name);\n    var relatedFile = file.name;\n    fileRef.put(file);\n    fileRef.getDownloadURL().then(function (url) {\n      firestore.collection('projects').add(_objectSpread({}, project, {\n        relatedFile: relatedFile,\n        url: url\n      }));\n    }).then(function () {\n      dispatch({\n        type: 'UPLOAD_RELATED',\n        project: project\n      });\n    }).then(function (err) {\n      dispatch({\n        type: 'UPLOAD_RELATED_ERROR',\n        err: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/store/actions/projectActions.js"],"names":["firebase","createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","profile","authorId","auth","uid","projectId","Math","floor","random","collection","add","authorFirstName","firstName","authorLastName","lastName","createdAt","Date","then","type","catch","err","uploadRelated","e","file","target","files","storageRef","storage","ref","fileRef","child","name","relatedFile","put","getDownloadURL","url"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,kBAAP;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACtC,SAAO,UAACC,QAAD,EAAWC,QAAX,QAAqD;AAAA,QAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,QAAlBC,YAAkB,QAAlBA,YAAkB;AACxD,QAAMC,SAAS,GAAGF,WAAW,GAAGE,SAAd,EAAlB;AACA,QAAMC,OAAO,GAAGJ,QAAQ,GAAGJ,QAAX,CAAoBQ,OAApC;AACA,QAAMC,QAAQ,GAAGL,QAAQ,GAAGJ,QAAX,CAAoBU,IAApB,CAAyBC,GAA1C;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAlB;AAGAR,IAAAA,SAAS,CAACS,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,mBACOf,OADP;AAEIgB,MAAAA,eAAe,EAAEV,OAAO,CAACW,SAF7B;AAGIC,MAAAA,cAAc,EAAEZ,OAAO,CAACa,QAH5B;AAIIZ,MAAAA,QAAQ,EAAEA,QAJd;AAKIa,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EALf;AAMIX,MAAAA,SAAS,EAAEA;AANf,QAOGY,IAPH,CAOQ,YAAM;AACVrB,MAAAA,QAAQ,CAAC;AAAEsB,QAAAA,IAAI,EAAE,gBAAR;AAA0BvB,QAAAA,OAAO,EAAPA;AAA1B,OAAD,CAAR;AACH,KATD,EASGwB,KATH,CASS,UAAAC,GAAG,EAAI;AACZxB,MAAAA,QAAQ,CAAC;AAAEsB,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA,GAAG,EAAHA;AAAhC,OAAD,CAAR;AACH,KAXD;AAcH,GArBD;AAsBH,CAvBM,C,CAuBN;AACD;AACA;AACA;;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAC1B,OAAD,EAAU2B,CAAV,EAAgB;AACzC,SAAO,UAAC1B,QAAD,EAAWC,QAAX,SAAqD;AAAA,QAA/BC,WAA+B,SAA/BA,WAA+B;AAAA,QAAlBC,YAAkB,SAAlBA,YAAkB;AACxD,QAAMC,SAAS,GAAGF,WAAW,GAAGE,SAAd,EAAlB;AACA,QAAMuB,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,QAAMC,UAAU,GAAGjC,QAAQ,CAACkC,OAAT,GAAmBC,GAAnB,EAAnB;AACA,QAAMC,OAAO,GAAGH,UAAU,CAACI,KAAX,CAAiBP,IAAI,CAACQ,IAAtB,CAAhB;AACA,QAAMC,WAAW,GAAGT,IAAI,CAACQ,IAAzB;AACAF,IAAAA,OAAO,CAACI,GAAR,CAAYV,IAAZ;AACAM,IAAAA,OAAO,CAACK,cAAR,GACCjB,IADD,CACM,UAACkB,GAAD,EAAS;AACXnC,MAAAA,SAAS,CAACS,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,mBACOf,OADP;AAEIqC,QAAAA,WAAW,EAAEA,WAFjB;AAGIG,QAAAA,GAAG,EAAEA;AAHT;AAKH,KAPD,EAQClB,IARD,CAQM,YAAM;AACRrB,MAAAA,QAAQ,CAAC;AAACsB,QAAAA,IAAI,EAAE,gBAAP;AAAyBvB,QAAAA,OAAO,EAAPA;AAAzB,OAAD,CAAR;AACH,KAVD,EAWCsB,IAXD,CAWM,UAACG,GAAD,EAAS;AACXxB,MAAAA,QAAQ,CAAC;AAAEsB,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA,GAAG,EAAHA;AAAhC,OAAD,CAAR;AACH,KAbD;AAcH,GArBD;AAsBH,CAvBM","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\n\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirebase().firestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        const projectId = Math.floor(Math.random() * 100000);\r\n        \r\n        \r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date(),\r\n            projectId: projectId,\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch(err => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err})\r\n        });\r\n        \r\n        \r\n    }\r\n}// we are passing this.state to this project action. Inside here we are\r\n// returning a function. We used thunk to do this and we get access to a \r\n//dispatch and store enhancers. Here we are pausing dispatch while we are\r\n// asyncroniusly adding a document to firebase.\r\n\r\n\r\nexport const uploadRelated = (project, e) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirebase().firestore();\r\n        const file = e.target.files[0];\r\n        const storageRef = firebase.storage().ref();\r\n        const fileRef = storageRef.child(file.name);\r\n        const relatedFile = file.name;\r\n        fileRef.put(file)\r\n        fileRef.getDownloadURL()\r\n        .then((url) => {\r\n            firestore.collection('projects').add({\r\n                ...project,\r\n                relatedFile: relatedFile, \r\n                url: url,\r\n            })\r\n        })\r\n        .then(() => {\r\n            dispatch({type: 'UPLOAD_RELATED', project})\r\n        })\r\n        .then((err) => {\r\n            dispatch({ type: 'UPLOAD_RELATED_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}