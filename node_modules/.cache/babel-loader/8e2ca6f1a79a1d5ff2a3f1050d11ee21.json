{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'; //import { Redirect } from 'react-router-dom';\n//import ProjectSummary from \"./projects/ProjectSummary\";\n\nvar Uploaded = /*#__PURE__*/function (_Component) {\n  _inherits(Uploaded, _Component);\n\n  function Uploaded() {\n    _classCallCheck(this, Uploaded);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Uploaded).apply(this, arguments));\n  }\n\n  _createClass(Uploaded, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var projects = this.props.projects;\n      console.log(this.props); //if(!auth.uid) return <Redirect to='/signin' /> \n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col s6 m6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, projects && projects.map(function (project) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }\n        }, project.relatedFile), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }\n        }, project.url));\n      })))));\n    }\n  }]);\n\n  return Uploaded;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    // state is passed form rootReducer,\n    //project is a property of the state in rootReducer\n    //projects is a property of the project object in\n    // projectReducer, initState\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose( //compose connected several HOCs, just\n//like store enhancers in Index.js\nconnect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]) //triggers firestoreReducer to sync changes with firebase. takes in an \n//array as a parameter. passing an object of Project collection\n)(Uploaded); // // import React from 'react';\n// const Uploaded = (props, e) => {\n//     const {projects} = props;\n//     console.log(projects)\n//     // if(projects) {\n//     //     return (\n//     //         <div className=\"card z-depth-0 project-summary\">\n//     //             {/* <div className=\"card-content grey-text text-darken-3 z-depth-4\">\n//     //                 <p className=\"id center-align\">{project.relatedFile}</p>\n//     //                 <span className=\"card-title\">{project.url}</span>\n//     //             </div> */}\n//     //         </div>\n//         //)\n//     //}\n// }\n// const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","Component","connect","firestoreConnect","compose","Uploaded","projects","props","console","log","map","project","relatedFile","url","mapStateToProps","state","firestore","ordered","auth","firebase","collection"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;AAEA;;IAGMC,Q;;;;;;;;;;;6BACO;AAAA;;AAAA,UAEEC,QAFF,GAEc,KAAKC,KAFnB,CAEED,QAFF;AAGLE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB,EAHK,CAIL;;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,QAAQ,IAAIA,QAAQ,CAACI,GAAT,CAAa,UAAAC,OAAO,EAAI;AACjC,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,OAAO,CAACC,WAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOD,OAAO,CAACE,GAAf,CAFF,CADJ;AAME,OAPO,CADf,CADA,CADJ,CADJ,CADJ;AAmBH;;;;EAzBkBZ,S;;AA4BvB,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC9BP,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACC,SAAO;AACHT,IAAAA,QAAQ,EAAES,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBX,QAD/B;AACwC;AAC3C;AACA;AACA;AACAY,IAAAA,IAAI,EAAEH,KAAK,CAACI,QAAN,CAAeD;AALlB,GAAP;AAOH,CATD;;AAWA,eAAed,OAAO,EAAC;AACnB;AACAF,OAAO,CAACY,eAAD,CAFW,EAGlBX,gBAAgB,CAAC,CACb;AAAEiB,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAHE,CAMhB;AACF;AAPkB,CAAP,CAQbf,QARa,CAAf,C,CAUA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n//import ProjectSummary from \"./projects/ProjectSummary\";\r\n\r\n\r\nclass Uploaded extends Component {\r\n    render() {\r\n        \r\n        const {projects} = this.props;\r\n        console.log(this.props);\r\n        //if(!auth.uid) return <Redirect to='/signin' /> \r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s6 m6\">\r\n                    <ul>\r\n                      {projects && projects.map(project => {\r\n                          return (\r\n                              <div>\r\n                                <span>{project.relatedFile}</span>\r\n                                <span>{project.url}</span>\r\n                              </div>\r\n                              \r\n                          )}\r\n                      )}\r\n                      </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n        //project is a property of the state in rootReducer\r\n        //projects is a property of the project object in\r\n        // projectReducer, initState\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\nexport default compose(//compose connected several HOCs, just\r\n    //like store enhancers in Index.js\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' },\r\n        \r\n    ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n    //array as a parameter. passing an object of Project collection\r\n)(Uploaded);\r\n\r\n// // import React from 'react';\r\n\r\n\r\n\r\n// const Uploaded = (props, e) => {\r\n//     const {projects} = props;\r\n    \r\n//     console.log(projects)\r\n//     // if(projects) {\r\n//     //     return (\r\n//     //         <div className=\"card z-depth-0 project-summary\">\r\n//     //             {/* <div className=\"card-content grey-text text-darken-3 z-depth-4\">\r\n//     //                 <p className=\"id center-align\">{project.relatedFile}</p>\r\n//     //                 <span className=\"card-title\">{project.url}</span>\r\n//     //             </div> */}\r\n//     //         </div>\r\n//         //)\r\n//     //}\r\n    \r\n// }\r\n\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n        \r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\n"]},"metadata":{},"sourceType":"module"}