{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'; //import { Redirect } from 'react-router-dom';\n// class Uploaded extends Component {\n//     render() {\n//         const  {projects}  = this.props;\n//         console.log(projects);\n//         //if(!auth.uid) return <Redirect to='/signin' /> \n//         return (\n//             <>\n//                 <div>\n//                      {/* <h3>{projects.relatedFile}</h3>\n//                      <p>{projects.url}</p>   */}\n//                 </div>\n//         </>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);\n//import React from 'react';\n\nvar Uploaded = function Uploaded(props) {\n  var id = props.id,\n      projects = props.projects,\n      project = props.project,\n      url = props.url;\n  var index = projects[id];\n  console.log(index);\n  return projects ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"relatedFile\",\n    src: url,\n    hight: \"100\",\n    width: \"100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, projects[0].relatedFile))) : 'no details';\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var id = ownProps.match.params.id;\n  var projects = state.firestore.ordered.projects;\n  var index = projects[id];\n  console.log(projects);\n  return {\n    projects: projects,\n    auth: state.firebase.auth\n  }; //this object is what we would like to attach to our props\n};\n\nexport default compose( //compose connected several HOCs, just\n//like store enhancers in Index.js\nconnect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]) //triggers firestoreReducer to sync changes with firebase. takes in an \n//array as a parameter. passing an object of Project collection\n)(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","connect","firestoreConnect","compose","Uploaded","props","id","projects","project","url","index","console","log","relatedFile","mapStateToProps","state","ownProps","match","params","firestore","ordered","auth","firebase","collection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MACjBC,EADiB,GACaD,KADb,CACjBC,EADiB;AAAA,MACbC,QADa,GACaF,KADb,CACbE,QADa;AAAA,MACHC,OADG,GACaH,KADb,CACHG,OADG;AAAA,MACMC,GADN,GACaJ,KADb,CACMI,GADN;AAExB,MAAMC,KAAK,GAAGH,QAAQ,CAACD,EAAD,CAAtB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACIH,QAAQ,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,IAAA,GAAG,EAAED,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,aAAR;AAAsB,IAAA,GAAG,EAAEG,GAA3B;AAAgC,IAAA,KAAK,EAAC,KAAtC;AAA4C,IAAA,KAAK,EAAC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyDF,QAAQ,CAAC,CAAD,CAAR,CAAYM,WAArE,CADF,CAFF,CADI,GAOL,YARP;AAUH,CAdD;;AAiBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,MAAMV,EAAE,GAAGU,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBZ,EAAjC;AACA,MAAMC,QAAQ,GAAGQ,KAAK,CAACI,SAAN,CAAgBC,OAAhB,CAAwBb,QAAzC;AACA,MAAMG,KAAK,GAAGH,QAAQ,CAACD,EAAD,CAAtB;AACCK,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,SAAO;AACHA,IAAAA,QAAQ,EAAEA,QADP;AAEHc,IAAAA,IAAI,EAAEN,KAAK,CAACO,QAAN,CAAeD;AAFlB,GAAP,CALyC,CAQxC;AACJ,CATD;;AAWI,eAAelB,OAAO,EAAC;AACnB;AACAF,OAAO,CAACa,eAAD,CAFW,EAGlBZ,gBAAgB,CAAC,CACb;AAAEqB,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAHE,CAMhB;AACF;AAPkB,CAAP,CAQbnB,QARa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n// class Uploaded extends Component {\r\n//     render() {\r\n//         const  {projects}  = this.props;\r\n//         console.log(projects);\r\n//         //if(!auth.uid) return <Redirect to='/signin' /> \r\n//         return (\r\n//             <>\r\n//                 <div>\r\n//                      {/* <h3>{projects.relatedFile}</h3>\r\n//                      <p>{projects.url}</p>   */}\r\n//                 </div>\r\n//         </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n\r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\n//import React from 'react';\r\n\r\n\r\n\r\nconst Uploaded = (props) => {\r\n    const {id, projects, project, url} = props;\r\n    const index = projects[id];\r\n    console.log(index)\r\n    return (\r\n        projects ? (\r\n            <ul>\r\n              {/* <img src={projects[0].url} alt='relatedFile' height='200' width='200' />  */}\r\n              <li key={id}>\r\n                <a href='relatedFile' src={url} hight='100' width='100'>{projects[0].relatedFile}</a>\r\n              </li>   \r\n          </ul> \r\n      ) : ('no details')\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.ordered.projects;\r\n    const index = projects[id];\r\n     console.log(projects)\r\n    return {\r\n        projects: projects,\r\n        auth: state.firebase.auth,\r\n    }//this object is what we would like to attach to our props\r\n}\r\n    \r\n    export default compose(//compose connected several HOCs, just\r\n        //like store enhancers in Index.js\r\n        connect(mapStateToProps),\r\n        firestoreConnect([\r\n            { collection: 'projects' },\r\n    \r\n        ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n        //array as a parameter. passing an object of Project collection\r\n    )(Uploaded);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}