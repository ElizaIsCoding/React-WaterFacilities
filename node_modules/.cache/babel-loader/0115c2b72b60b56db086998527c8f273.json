{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport var createProject = function createProject(project) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase,\n        getFirestore = _ref.getFirestore;\n    var firestore = getFirebase().firestore();\n    var profile = getState().firebase.profile;\n    var authorId = getState().firebase.auth.uid;\n    var projectId = Math.round(Math.random(10000, 2000000));\n    firestore.collection('projects').add(_objectSpread({}, project, {\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date(),\n      projectId: projectId\n    })).then(function () {\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project: project\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err: err\n      });\n    });\n  };\n}; // we are passing this.state to this project action. Inside here we are\n// returning a function. We used thunk to do this and we get access to a \n//dispatch and store enhancers. Here we are pausing dispatch while we are\n// asyncroniusly adding a document to firebase.","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/store/actions/projectActions.js"],"names":["createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","authorId","auth","uid","projectId","Math","round","random","collection","add","authorFirstName","firstName","authorLastName","lastName","createdAt","Date","then","type","catch","err"],"mappings":";AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACtC,SAAO,UAACC,QAAD,EAAWC,QAAX,QAAqD;AAAA,QAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,QAAlBC,YAAkB,QAAlBA,YAAkB;AACxD,QAAMC,SAAS,GAAGF,WAAW,GAAGE,SAAd,EAAlB;AACA,QAAMC,OAAO,GAAGJ,QAAQ,GAAGK,QAAX,CAAoBD,OAApC;AACA,QAAME,QAAQ,GAAGN,QAAQ,GAAGK,QAAX,CAAoBE,IAApB,CAAyBC,GAA1C;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,CAAY,KAAZ,EAAmB,OAAnB,CAAX,CAAlB;AAEAT,IAAAA,SAAS,CAACU,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,mBACOhB,OADP;AAEIiB,MAAAA,eAAe,EAAEX,OAAO,CAACY,SAF7B;AAGIC,MAAAA,cAAc,EAAEb,OAAO,CAACc,QAH5B;AAIIZ,MAAAA,QAAQ,EAAEA,QAJd;AAKIa,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EALf;AAMIX,MAAAA,SAAS,EAAEA;AANf,QAOGY,IAPH,CAOQ,YAAM;AACVtB,MAAAA,QAAQ,CAAC;AAAEuB,QAAAA,IAAI,EAAE,gBAAR;AAA0BxB,QAAAA,OAAO,EAAPA;AAA1B,OAAD,CAAR;AACH,KATD,EASGyB,KATH,CASS,UAAAC,GAAG,EAAI;AACZzB,MAAAA,QAAQ,CAAC;AAAEuB,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA,GAAG,EAAHA;AAAhC,OAAD,CAAR;AACH,KAXD;AAcH,GApBD;AAqBH,CAtBM,C,CAsBN;AACD;AACA;AACA","sourcesContent":["export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirebase().firestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        const projectId = Math.round(Math.random(10000, 2000000));\r\n        \r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date(),\r\n            projectId: projectId, \r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch(err => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err})\r\n        });\r\n        \r\n        \r\n    }\r\n}// we are passing this.state to this project action. Inside here we are\r\n// returning a function. We used thunk to do this and we get access to a \r\n//dispatch and store enhancers. Here we are pausing dispatch while we are\r\n// asyncroniusly adding a document to firebase.\r\n\r\n"]},"metadata":{},"sourceType":"module"}