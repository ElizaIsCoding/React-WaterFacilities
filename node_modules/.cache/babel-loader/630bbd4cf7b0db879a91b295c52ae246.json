{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\n\nimport React from 'react'; // import { connect } from 'react-redux';\n// import { firestoreConnect } from 'react-redux-firebase';\n// import { compose } from 'redux';\n//import { Redirect } from 'react-router-dom';\n// class Uploaded extends Component {\n//     render() {\n//         const  {projects}  = this.props;\n//         console.log(projects);\n//         //if(!auth.uid) return <Redirect to='/signin' /> \n//         return (\n//             <>\n//                 <div>\n//                      {/* <h3>{projects.relatedFile}</h3>\n//                      <p>{projects.url}</p>   */}\n//                 </div>\n//         </>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);\n//import React from 'react';\n// const Uploaded = ({projects}) => {\n//     console.log(projects)\n//     return (\n//       projects ? (\n//             <ul>\n//           {\n//               projects.map(project => (\n//                 <li key={project.id}>{project.url}</li>\n//               ))\n//           }\n//           </ul>\n//       ) : ('no details')\n//     );\n// }\n// const mapStateToProps = (state) => {\n//     console.log(state)\n//         //const projects = state.firestore.data.projects;\n//         return {\n//             projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//             //project is a property of the state in rootReducer\n//             //projects is a property of the project object in\n//             // projectReducer, initState\n//             auth: state.firebase.auth,\n//            // relatedFile: relatedFile,\n//         };\n//     };\n//     export default compose(//compose connected several HOCs, just\n//         //like store enhancers in Index.js\n//         connect(mapStateToProps),\n//         firestoreConnect([\n//             { collection: 'projects' },\n//         ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//         //array as a parameter. passing an object of Project collection\n//     )(Uploaded);\n\nvar Uploaded = function Uploaded(props) {\n  var relatedFile = props.relatedFile;\n  console.log(relatedFile);\n  return /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid mb-2 mt-2\",\n    src: relatedFile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Uploaded;","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","Uploaded","props","relatedFile","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MACjBC,WADiB,GACFD,KADE,CACjBC,WADiB;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,GAAG,EAAEA,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAND;;AAQA,eAAeF,QAAf","sourcesContent":["import React from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { firestoreConnect } from 'react-redux-firebase';\r\n// import { compose } from 'redux';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n// class Uploaded extends Component {\r\n//     render() {\r\n//         const  {projects}  = this.props;\r\n//         console.log(projects);\r\n//         //if(!auth.uid) return <Redirect to='/signin' /> \r\n//         return (\r\n//             <>\r\n//                 <div>\r\n//                      {/* <h3>{projects.relatedFile}</h3>\r\n//                      <p>{projects.url}</p>   */}\r\n//                 </div>\r\n//         </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n\r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\n//import React from 'react';\r\n\r\n\r\n\r\n// const Uploaded = ({projects}) => {\r\n//     console.log(projects)\r\n//     return (\r\n//       projects ? (\r\n//             <ul>\r\n//           {\r\n//               projects.map(project => (\r\n//                 <li key={project.id}>{project.url}</li>\r\n//               ))\r\n//           }\r\n              \r\n//           </ul>\r\n           \r\n//       ) : ('no details')\r\n\r\n//     );\r\n\r\n// }\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//     console.log(state)\r\n//         //const projects = state.firestore.data.projects;\r\n//         return {\r\n//             projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//             //project is a property of the state in rootReducer\r\n//             //projects is a property of the project object in\r\n//             // projectReducer, initState\r\n//             auth: state.firebase.auth,\r\n//            // relatedFile: relatedFile,\r\n//         };\r\n//     };\r\n    \r\n//     export default compose(//compose connected several HOCs, just\r\n//         //like store enhancers in Index.js\r\n//         connect(mapStateToProps),\r\n//         firestoreConnect([\r\n//             { collection: 'projects' },\r\n    \r\n//         ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//         //array as a parameter. passing an object of Project collection\r\n//     )(Uploaded);\r\n\r\n\r\n\r\nconst Uploaded = (props) => {\r\n    const {relatedFile} = props;\r\n    console.log(relatedFile);\r\n    return (\r\n        <img className='img-fluid mb-2 mt-2' src={relatedFile} />\r\n    );\r\n};\r\n\r\nexport default Uploaded;"]},"metadata":{},"sourceType":"module"}