{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react'; // import { connect } from 'react-redux';\n// import { firestoreConnect } from 'react-redux-firebase';\n// import { compose } from 'redux';\n\nvar Uploaded = /*#__PURE__*/function (_Component) {\n  _inherits(Uploaded, _Component);\n\n  function Uploaded() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Uploaded);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Uploaded)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.clicked = function (e) {\n      console.log(e);\n    };\n\n    return _this;\n  }\n\n  _createClass(Uploaded, [{\n    key: \"render\",\n    value: function render() {\n      var project = this.props.project;\n      console.log('project', project); // if(project) {\n      //   const projectImage = project.url;\n      //   return (\n      // <div>\n      // { projectImage.map((image) => {\n      //   <a href={image} alt='relatedFile' onClick={this.clicked}>{project.relatedFile}</a>\n      // })}\n      // </div>\n      // )}\n      //return (project)\n      //}\n    }\n  }]);\n\n  return Uploaded;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var projects = state.firestore.ordered.projects; //console.log('state', state)\n\n  return {\n    projects: projects,\n    auth: state.firebase.auth\n  }; //this object is what we would like to attach to our props\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]))(Uploaded);","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","Component","Uploaded","clicked","e","console","log","project","props","mapStateToProps","state","projects","firestore","ordered","auth","firebase","compose","connect","firestoreConnect","collection"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;;IAGMC,Q;;;;;;;;;;;;;;;;UAEJC,O,GAAU,UAACC,CAAD,EAAO;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAED,K;;;;;;;6BACQ;AAAA,UACAG,OADA,GACW,KAAKC,KADhB,CACAD,OADA;AAEPF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,OAAvB,EAFO,CAIP;AACA;AAEA;AACI;AACA;AACA;AACA;AACA;AACL;AACC;AACF;AAID;;;;EAzBsBN,S;;AAyBrB;;AAGF,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,MAAMC,QAAQ,GAAGD,KAAK,CAACE,SAAN,CAAgBC,OAAhB,CAAwBF,QAAzC,CAD+B,CAE/B;;AACA,SAAO;AACHA,IAAAA,QAAQ,EAAEA,QADP;AAEHG,IAAAA,IAAI,EAAEJ,KAAK,CAACK,QAAN,CAAeD;AAFlB,GAAP,CAH+B,CAM9B;AACJ,CAPD;;AASI,eAAeE,OAAO,CAClBC,OAAO,CAACR,eAAD,CADW,EAElBS,gBAAgB,CAAC,CACb;AAAEC,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAFE,CAAP,CAKbjB,QALa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { firestoreConnect } from 'react-redux-firebase';\r\n// import { compose } from 'redux';\r\n\r\n\r\nclass Uploaded extends Component {\r\n\r\n  clicked = (e) => {\r\n    console.log(e)\r\n\r\n  }\r\n  render() {\r\n    const {project} = this.props;\r\n    console.log('project', project)\r\n    \r\n    // if(project) {\r\n    //   const projectImage = project.url;\r\n     \r\n    //   return (\r\n        // <div>\r\n        // { projectImage.map((image) => {\r\n        //   <a href={image} alt='relatedFile' onClick={this.clicked}>{project.relatedFile}</a>\r\n        // })}\r\n        // </div>\r\n   // )}\r\n    //return (project)\r\n  //}\r\n  \r\n  \r\n  \r\n}};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const projects = state.firestore.ordered.projects;\r\n    //console.log('state', state)\r\n    return {\r\n        projects: projects,\r\n        auth: state.firebase.auth,\r\n    }//this object is what we would like to attach to our props\r\n}\r\n    \r\n    export default compose(\r\n        connect(mapStateToProps),\r\n        firestoreConnect([\r\n            { collection: 'projects' },\r\n        ])\r\n    )(Uploaded);\r\n\r\n\r\n \r\n"]},"metadata":{},"sourceType":"module"}