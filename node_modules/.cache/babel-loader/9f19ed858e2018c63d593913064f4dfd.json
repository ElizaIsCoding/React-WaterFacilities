{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Course 2020\\\\React-Water\\\\src\\\\components\\\\Uploaded.js\";\n\nimport React from 'react'; // import { connect } from 'react-redux';\n// import { firestoreConnect } from 'react-redux-firebase';\n// import { compose } from 'redux';\n\nimport { Link } from 'react-router-dom'; //import { getFirestore } from 'redux-firestore';\n//import { Redirect } from 'react-router-dom';\n// class Uploaded extends Component {\n//     render() {\n//         const  {projects}  = this.props;\n//         console.log(projects);\n//         //if(!auth.uid) return <Redirect to='/signin' /> \n//         return (\n//             <>\n//                 <div>\n//                      {/* <h3>{projects.relatedFile}</h3>\n//                      <p>{projects.url}</p>   */}\n//                 </div>\n//         </>\n//         )\n//     }\n// }\n// const mapStateToProps = state => {\n//    //console.log(state);\n//     return {\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\n//         //project is a property of the state in rootReducer\n//         //projects is a property of the project object in\n//         // projectReducer, initState\n//         auth: state.firebase.auth,\n//     };\n// };\n// export default compose(//compose connected several HOCs, just\n//     //like store enhancers in Index.js\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         { collection: 'projects' },\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//     //array as a parameter. passing an object of Project collection\n// )(Uploaded);\n//import React from 'react';\n\nvar Uploaded = function Uploaded(props) {\n  var projects = props.projects,\n      project = props.project; //const projectData = projects.find(project[id]);\n\n  console.log('project', project);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-list section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"relatedFile\",\n    src: project.url,\n    height: \"100\",\n    width: \"100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }));\n}; //Uploaded();\n// const mapStateToProps = (state, props) => {\n//     const projects = state.firestore.ordered.projects;\n//     const project = props.project;\n//     console.log('state', state)\n//     //console.log('project', project)\n//     return {\n//         projects: projects,\n//         auth: state.firebase.auth,\n//         //project: project,\n//     }//this object is what we would like to attach to our props\n// }\n//     export default compose(//compose connected several HOCs, just\n//         //like store enhancers in Index.js\n//         connect(mapStateToProps),\n//         firestoreConnect([\n//             { collection: 'projects' },\n//         ])//triggers firestoreReducer to sync changes with firebase. takes in an \n//         //array as a parameter. passing an object of Project collection\n//     )(Uploaded);\n\n\nexport default Uploaded;","map":{"version":3,"sources":["C:/Users/User/Documents/Course 2020/React-Water/src/components/Uploaded.js"],"names":["React","Link","Uploaded","props","projects","project","console","log","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,SAAQC,IAAR,QAAmB,kBAAnB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MAEjBC,QAFiB,GAEID,KAFJ,CAEjBC,QAFiB;AAAA,MAEPC,OAFO,GAEIF,KAFJ,CAEPE,OAFO,EAGxB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AACF,sBACM;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,GAAG,EAAC,aAAT;AAAuB,IAAA,GAAG,EAAEA,OAAO,CAACG,GAApC;AAAyC,IAAA,MAAM,EAAC,KAAhD;AAAsD,IAAA,KAAK,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADN;AAQD,CAbD,C,CAkBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAGA,eAAeN,QAAf","sourcesContent":["import React from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { firestoreConnect } from 'react-redux-firebase';\r\n// import { compose } from 'redux';\r\nimport {Link} from 'react-router-dom';\r\n//import { getFirestore } from 'redux-firestore';\r\n//import { Redirect } from 'react-router-dom';\r\n\r\n// class Uploaded extends Component {\r\n//     render() {\r\n//         const  {projects}  = this.props;\r\n//         console.log(projects);\r\n//         //if(!auth.uid) return <Redirect to='/signin' /> \r\n//         return (\r\n//             <>\r\n//                 <div>\r\n//                      {/* <h3>{projects.relatedFile}</h3>\r\n//                      <p>{projects.url}</p>   */}\r\n//                 </div>\r\n//         </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//    //console.log(state);\r\n//     return {\r\n//         projects: state.firestore.ordered.projects,// state is passed form rootReducer,\r\n//         //project is a property of the state in rootReducer\r\n//         //projects is a property of the project object in\r\n//         // projectReducer, initState\r\n//         auth: state.firebase.auth,\r\n//     };\r\n// };\r\n\r\n// export default compose(//compose connected several HOCs, just\r\n//     //like store enhancers in Index.js\r\n//     connect(mapStateToProps),\r\n//     firestoreConnect([\r\n//         { collection: 'projects' },\r\n\r\n//     ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//     //array as a parameter. passing an object of Project collection\r\n// )(Uploaded);\r\n\r\n//import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Uploaded = (props) => {\r\n  \r\n    const {projects, project} = props;\r\n    //const projectData = projects.find(project[id]);\r\n    console.log('project', project) \r\n  return (\r\n        <div className=\"project-list section\">\r\n        {/* <Link to={'/uploaded/' + project.id}  key={project.id}> */}\r\n          <img alt='relatedFile' src={project.url} height='100' width='100'></img>\r\n          {/* </Link> */}\r\n        </div>\r\n  )\r\n  \r\n};\r\n\r\n\r\n\r\n\r\n//Uploaded();\r\n\r\n// const mapStateToProps = (state, props) => {\r\n//     const projects = state.firestore.ordered.projects;\r\n//     const project = props.project;\r\n//     console.log('state', state)\r\n//     //console.log('project', project)\r\n//     return {\r\n//         projects: projects,\r\n//         auth: state.firebase.auth,\r\n//         //project: project,\r\n//     }//this object is what we would like to attach to our props\r\n// }\r\n    \r\n//     export default compose(//compose connected several HOCs, just\r\n//         //like store enhancers in Index.js\r\n//         connect(mapStateToProps),\r\n//         firestoreConnect([\r\n//             { collection: 'projects' },\r\n    \r\n//         ])//triggers firestoreReducer to sync changes with firebase. takes in an \r\n//         //array as a parameter. passing an object of Project collection\r\n//     )(Uploaded);\r\n\r\n\r\nexport default Uploaded;\r\n"]},"metadata":{},"sourceType":"module"}